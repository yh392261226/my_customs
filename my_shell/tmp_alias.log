-='cd -'
--git-dir=/Users/yanghao/.cfg
--work-tree=/Users/yanghao
..='cd ../'
...='cd ../../'
....='cd ../../..'
.....='cd ../../../..'
......='cd ../../../../..'
.3='cd ../../../'
.4='cd ../../../../'
.5='cd ../../../../../'
.6='cd ../../../../../../'
1='cd -1'
2='cd -2'
3='cd -3'
4='cd -4'
5='cd -5'
6='cd -6'
7='cd -7'
8='cd -8'
9='cd -9'
_='sudo '
a='fasd -a'
a2z=show_aliases_from_a2z
afind='ack -il'
ag=tag
apath=abspath
autonetdisk=auto_change_netdisk_status
badlink=show_bad_links
baidu=sbaidu
batw=bat_whereis_file
bb=brave_default_bookmarks
bbd=bbdiff
bbpb='pbpaste | bbedit --clean --view-top'
bcc=brew_clean_caches
bcubc='brew upgrade --cask && brew cleanup'
bcubo='brew update && brew outdated --cask'
bfu='brew upgrade --formula'
bh=brave_default_history
bing=sbing
bip=fzf_brew_install_by_select
brewp='brew pin'
brewsp='brew list --pinned'
brewu='brew update && brew upgrade && brew cleanup && brew cleanup --prune-prefix && brew doctor'
brewup='brew update && brew upgrade && brew cleanup && brew cleanup --prune-prefix && brew doctor'
browse=browser
bu='brew update && brew upgrade && brew cleanup'
bubc='brew upgrade && brew cleanup'
bubo='brew update && brew outdated'
bubu='bubo && bubc'
bubug='bubo && bugbc'
bugbc='brew upgrade --greedy && brew cleanup'
bup=fzf_brew_update_by_select
buz='brew uninstall --zap'
bwii='bower install'
bwl='bower list'
bwlu='bower lookup'
bws='bower search'
bwu='bower update'
bwui='bower uninstall'
bz2='tar -xjvf'
c=chrome_default_history
c2=chrome_profile1_history
c2fmd5=check_2files_by_md5
cat=/opt/homebrew/bin/ccat
catproxy=proxy_port_cat
catw=cat_whereis_file
cb=chromium_bookmarks
cb1=chrome_default_bookmarks
cb2=chrome_profile1_bookmarks
ccat=colorize_cat
cd.='cd ..'
cd..='cd ../'
cdff=fzf_cd_to_file
cdpw=cd_command_parent_directory
cdto=cd_command_directory
cdw=cd_command_directory
ch=chromium_history
citc=change_iterm2_color_scheme
cl=clear
cleanupDS='find . -type f -name '\''*.DS_Store'\'' -ls -delete'
cleanupLS='/System/Library/Frameworks/CoreServices.framework/Frameworks/LaunchServices.framework/Support/lsregister -kill -r -domain local -domain system -domain user && killall Finder'
cless=colorize_less
cls=/opt/homebrew/bin/lsd
cman='man -M /opt/homebrew/share/man/zh'
cnman='man -M /opt/homebrew/share/man/zh'
code.='/usr/local/bin/code .'
codecept=vendor/bin/codecept
config=dotbare
configproxy=proxy_port_config
cp='cp -r'
cpp='rsync -PrlpE'
cpu_hogs='ps wwaxr -o pid,stat,%cpu,time,command | head -10'
cpz='rsync -PrlpEz'
cs=codesign
cta=create_tmp_aliases
d='fasd -d'
d64=decode64
difff=diff-so-fancy
ding=/opt/homebrew/bin/pokemon
dirw=get_command_directory
dkcpdown='docker-compose down'
dkcpstart='docker-compose start'
dkcpstop='docker-compose stop'
dkcpup='docker-compose up -d'
dkimgs='docker images'
dkps='docker ps'
dkpsa='docker ps -a'
dkst='docker stats'
du='ncdu --color dark -rr -x --exclude .git --exclude node_modules'
dut='du: /usr/bin/du /usr/share/man/man1/du.1 -sh'
e64=encode64
ecd=__enhancd::cd
ef64=encodefile64
egrep='grep -E --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
ehosts='sudo vim /etc/hosts'
ehtml=vim
ephp=vim
eproxy=print_proxy
epy=vim
erb=vim
extr=customExtract
f='fasd -f'
faf=fzf_aliases_functions_selector
fafl=fzf_customs_fzf_awesome_functions_list
fb=fzf_mark_by_buku
fbi=fuzzy_brew_install
fbr=fzf_checkout_git_branch
fbui=fuzzy_brew_uninstall
fcd=fzf_cd_select
fcf=fzf_show_customs_functions
fci=fuzzy_cask_install
fco=fzf_git_checkout
fco2=fzf_git_checkout2
fco_preview=fzf_git_checkout_preview
fcoc=fzf_git_checkout_commit
fcs=fzf_git_commit_sha
fct=fzf_cd_to
fcui=fuzzy_cask_uninstall
fd2=fzf_cd_select2
fdh=fzf_directory_history
fdof=fzf_directories_or_files
fdr=fzf_cd_to_parent
fe=fzf_e
fev=fzf_env_vars
feval=fzf_eval
fext=find_current_directory_files_by_ext
ff=find_file_by_params
ffe=find_file_by_end
ffs=find_files_by_start
fgl=fzf_figlet_font_selector
fgrep='grep -F --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
fgs=fzf_git_status
fgst=fzf_git_untracked
fh=fzf_history_select
fhd=fzf_hidden_directories
fhistory=fzf_history
fhp=fzf_history_print
fif=fzf_search_term
filetree='ls -R | grep :$ | sed -e '\''s/:$//'\'' -e '\''s/[^-][^\/]*\//--/g'\'' -e '\''s/^/ /'\'' -e '\''s/-/|/'\'
find_pid=find_process_id
finderHide='defaults write com.apple.finder ShowAllFiles FALSE'
finderShow='defaults write com.apple.finder ShowAllFiles TRUE'
flf=find_link_files
flushDNS='dscacheutil -flushcache'
flushdns=flush_dns
fman=fzf_man
fmq=find_files_by_contain
fnvi=fzf_nvim
fnvim=fzf_nvim
fo=fzf_open_with_editor
foe=fzf_open_or_edit
foga=forgit::add
fogcf=forgit::restore
fogclean=forgit::clean
fogd=forgit::diff
fogi=forgit::ignore
foglo=forgit::log
fogss=forgit::stash::show
fpid=find_process_id
fps_kill=fzf_process_kill
fps_kill2=fzf_process_kill2
frb=fzf_rvm_select
free=show_free
frf=fzf_rm_file
fsa=fzf_show_alias
fsamemd5=find_same_file_by_md5
fsh-alias=fast-theme
fshow=fzf_git_commit_browser
fstash=fzf_git_stash
ft=fzf_theme_selector
ftags=fzf_tags
ftpane=fzf_tmux_pane
ftt=fzf_file_preview
fv=fzf_open_with_editor2
fvi=fzf_vim
fvim=fzf_vim
fw=fzf_man_widget
fz=fzf_jump_between_directory
fzf_bdl=fzf_brew_delete_by_select
fzf_bip=fzf_brew_install_by_select
fzf_br=fzf_checkout_git_branch
fzf_bup=fzf_brew_update_by_select
fzf_rb=fzf_rvm_select
fzf_z=fzf_jump_between_directory
g=git
ga=forgit::add
gb='git branch'
gba='git branch -a'
gbd=forgit::branch::delete
gbl=forgit::blame
gc='git commit -m'
gca='git commit -v -a'
gcb=forgit::checkout::branch
gcd='git checkout $(git config gitflow.branch.develop)'
gcf=forgit::checkout::file
gch='git checkout $(git config gitflow.prefix.hotfix)'
gcid='git log | head -1 | awk '\''{print substr($2,1,7)}'\'' | pbcopy'
gclean=forgit::clean
gco=forgit::checkout::commit
gcount='git shortlog -sn'
gcp=forgit::cherry::pick::from::branch
gcr='git checkout $(git config gitflow.prefix.release)'
gct=forgit::checkout::tag
gd=forgit::diff
gd2='git status -s  | fzf --no-sort --reverse  --preview '\''git diff --color=always {+2} | diff-so-fancy'\''  --bind=ctrl-j:preview-down --bind=ctrl-k:preview-up  --preview-window=right:60%:wrap'
gdto=cd_like_directory
gdv='git diff -w "$@" | vim -R -'
geca='gem cert --add'
gecb='gem cert --build'
geclup='gem cleanup -n'
gecr='gem cert --remove'
gegi='gem generate_index'
geh='gem help'
gei='gem info'
geiall='gem info --all'
gein='gem install'
gel='gem lock'
geli='gem list'
geo='gem open'
geoe='gem open -e'
getportstatus=get_port_using_status
getproxy=get_proxy
geun='gem uninstall'
gfa=goodfonWithAutoDiff
gfa2=goodfonWithAutoDiff2
gfl='git flow'
gflf='git flow feature'
gflff='git flow feature finish'
gflffc='git flow feature finish ${$(git_current_branch)#feature/}'
gflfp='git flow feature publish'
gflfpc='git flow feature publish ${$(git_current_branch)#feature/}'
gflfpll='git flow feature pull'
gflfs='git flow feature start'
gflh='git flow hotfix'
gflhf='git flow hotfix finish'
gflhfc='git flow hotfix finish ${$(git_current_branch)#hotfix/}'
gflhp='git flow hotfix publish'
gflhpc='git flow hotfix publish ${$(git_current_branch)#hotfix/}'
gflhs='git flow hotfix start'
gfli='git flow init'
gflr='git flow release'
gflrf='git flow release finish'
gflrfc='git flow release finish ${$(git_current_branch)#release/}'
gflrp='git flow release publish'
gflrpc='git flow release publish ${$(git_current_branch)#release/}'
gflrs='git flow release start'
gfon=goodfon
gfu=forgit::fixup
gi=forgit::ignore
gifify=gifify_from_video
git-cdroot='cd $(git rev-parse --show-toplevel) && echo "$_"'
git-grab=git-incoming-commits
gitdiffb=git_diff_2branches
gith='git stash'
gitroot='cd $(git rev-parse --show-toplevel) && echo "$_"'
gittgz=compress_git_to_tgz
gitv='git log --graph --format="%C(auto)%h%d %s %C(black)%C(bold)%cr"'
gitzip=compress_git_to_zip
gl='git pull'
glo=forgit::log
globurl='noglob urlglobber '
gob='go build'
goc='go clean'
god='go doc'
goe='go env'
gof='go fmt'
gofa='go fmt ./...'
gofx='go fix'
gog='go get'
goga='go get ./...'
goi='go install'
gol='go list'
gom='go mod'
google=sgoogle
gopa='cd $GOPATH'
gopb='cd $GOPATH/bin'
gops='cd $GOPATH/src'
gor='go run'
got='go test'
gota='go test ./...'
goto='go tool'
gotoc='go tool compile'
gotod='go tool dist'
gotofx='go tool fix'
gov='go vet'
gove='go version'
gow='go work'
goweb='godoc -http=:9900 >> /dev/null &'
gp='git push'
grb=forgit::rebase
grc=forgit::revert::commit
grep='grep --color=auto --exclude-dir={.bzr,CVS,.git,.hg,.svn,.idea,.tox}'
grh=forgit::reset::head
grsd='grunt server:dist'
grst='grunt server:test'
grsv='grunt server'
grt='grunt test'
gs='git status'
gsp=forgit::stash::push
gss=forgit::stash::show
gup='git fetch && git rebase'
gz='tar -zxvf'
h=history
hc='history -c'
headw=head_whereis_file
help=help_by_tldr
hfd='builtin fc -li | grep 2024-02-29'
hfile=get_hash_file
hfs='builtin fc -li | grep '
hgc='hg clone'
hgpl='hg pull'
hgpu='hg push'
hgs='hg status'
hgu='hg update'
hideF=hidden_files_hide
hidefiles='defaults write com.apple.finder AppleShowAllFiles -bool false && killall Finder'
history=omz_history
hl='history | less'
hs='history | grep'
hsi='history | grep -i'
ii=show_useful_host
imgcat=/Users/yanghao/.iterm2/imgcat
imgls=/Users/yanghao/.iterm2/imgls
imgurlcat=image_url_cat
ipInfo0='ipconfig getpacket en0'
ipInfo1='ipconfig getpacket en1'
ipython='python3 -c "import IPython, sys; sys.exit(IPython.start_ipython())"'
it2api=/Users/yanghao/.iterm2/it2api
it2attention=/Users/yanghao/.iterm2/it2attention
it2check=/Users/yanghao/.iterm2/it2check
it2copy=/Users/yanghao/.iterm2/it2copy
it2dl=/Users/yanghao/.iterm2/it2dl
it2getvar=/Users/yanghao/.iterm2/it2getvar
it2git=/Users/yanghao/.iterm2/it2git
it2profile=/Users/yanghao/.iterm2/it2profile
it2setcolor=/Users/yanghao/.iterm2/it2setcolor
it2setkeylabel=/Users/yanghao/.iterm2/it2setkeylabel
it2tip=/Users/yanghao/.iterm2/it2tip
it2ul=/Users/yanghao/.iterm2/it2ul
it2universion=/Users/yanghao/.iterm2/it2universion
itc=toggle-theme
ks='lsd -l'
l='gls -aH --color=tty'
la='ls -lAh'
latest-perl='curl -s https://www.perl.org/get.html | perl -wlne '\''if (/perl\-([\d\.]+)\.tar\.gz/) { print $1; exit;}'\'
lg=lazygit
lhf=list_hidden_files
ll='ls -lh'
llf=list_link_files
llw=ll_whereis_command
lps=list_ports
ls='ls -G'
lsa='ls -lah'
lsock='sudo /usr/sbin/lsof -i -P'
lsockT='sudo /usr/sbin/lsof -nP | grep TCP'
lsockU='sudo /usr/sbin/lsof -nP | grep UDP'
lv='lsd -la'
lvi=/usr/bin/vim
make10mb='mkfile 10m ./10MB.dat'
make1mb='mkfile 1m ./1MB.dat'
make5mb='mkfile 5m ./5MB.dat'
mcd=mkdir_cd
md='mkdir -p'
memHogsPs='ps wwaxm -o pid,stat,vsize,rss,time,command | head -10'
memHogsTop='top -l 1 -o rsize | head -20'
memo=mark_by_cheatsh
mk='mkdir -p'
mkdir='mkdir -p'
mla=get_file_private_value
mountReadWrite='/sbin/mount -uw /'
mtrash=remove_to_trash
mvi='/opt/homebrew/opt/macvim/bin/mvim -v'
mvim='/opt/homebrew/opt/macvim/bin/mvim -v'
mvn=mvn-or-mvnw
'mvn!'='mvn -f $(git rev-parse --show-toplevel 2>/dev/null || echo ".")/pom.xml'
mvn-updates='mvn versions:display-dependency-updates'
mvnag='mvn archetype:generate'
mvnboot='mvn spring-boot:run'
mvnc='mvn clean'
mvncd='mvn clean deploy'
mvnce='mvn clean eclipse:clean eclipse:eclipse'
mvnci='mvn clean install'
mvncie='mvn clean install eclipse:eclipse'
mvncini='mvn clean initialize'
mvncist='mvn clean install -DskipTests'
mvncisto='mvn clean install -DskipTests --offline'
mvncom='mvn compile'
mvncp='mvn clean package'
mvnct='mvn clean test'
mvncv='mvn clean verify'
mvncvst='mvn clean verify -DskipTests'
mvndocs='mvn dependency:resolve -Dclassifier=javadoc'
mvndp='mvn deploy'
mvndt='mvn dependency:tree'
mvne='mvn eclipse:eclipse'
mvnfmt='mvn fmt:format'
mvnjetty='mvn jetty:run'
mvnp='mvn package'
mvnqdev='mvn quarkus:dev'
mvns='mvn site'
mvnsrc='mvn dependency:sources'
mvnt='mvn test'
mvntc='mvn tomcat:run'
mvntc7='mvn tomcat7:run'
mwhois=my_whois
myMessage=my_message
myip='curl myip.ipip.net'
myps=my_ps
mysql='command mysql --pager=/Users/yanghao/.zinit/plugins/horosgrisa---mysql-colorize/mycat'
myweather=my_weather
netCons='lsof -i'
numFiles='echo $(ls -1 | wc -l)'
nvi=/opt/homebrew/bin/nvim
ofd='open_command $PWD'
offproxy=unset_proxy
onproxy=set_proxy
openPorts='sudo lsof -i | grep LISTEN'
openw=open_directory_whereis_command
p=ps_or_procs
parentdir=get_parent_directory
pbi='perlbrew install'
pbl='perlbrew list'
pbo='perlbrew off'
pbs='perlbrew switch'
pbu='perlbrew use'
pcolors=print_colors
pd=perldoc
pg='ping -c 1 google.com | tail -3'
phpcv=php_change_version
pip='noglob pip'
pipgi='pip freeze | grep'
pipi='pip install'
pipir='pip install -r requirements.txt'
piplo='pip list -o'
pipreq='pip freeze > requirements.txt'
pipu='pip install --upgrade'
pipun='pip uninstall'
ple='perl -wlne'
pping=prettyping
pproxy=print_proxy
pr='ping -c 1 192.168.2.1 | tail -3'
pwdw=pwd_command_directory
py=python3
pyfind='find . -name "*.py"'
pygrep='grep -nr --include="*.py"'
pyserver='python3 -m http.server'
qfind='find . -name '
ql=quick_preview
rb=ruby
rd=rmdir
reloadz=reload_zinit
remove_DS=remove_DS_files
remove_ext=remove_files_by_ext
removesshtmp=remove_ssh_tmp_file
removew=remove_whereis_file
renamedownloadpics=images_rename_from_download
resizes=image_resizes
rfind='find . -name "*.rb" | xargs grep -n'
rm='rm -i'
rmDS=remove_DS_files
rmf='rm -rf'
rmsshtmp=remove_ssh_tmp_file
rmww=remove_whereis_file
rrun='ruby -e'
rserver='ruby -run -e httpd . -p 8080'
rsync-copy='rsync -avz --progress -h'
rsync-move='rsync -avz --progress -h --remove-source-files'
rsync-synchronize='rsync -avzu --delete --progress -h'
rsync-update='rsync -avzu --progress -h'
run-help=man
s='fasd -si'
sa='svn add'
sb=stealth-browser
sc='svn commit -m'
screensaverDesktop='/System/Library/Frameworks/ScreenSaver.framework/Resources/ScreenSaverEngine.app/Contents/MacOS/ScreenSaverEngine -background'
sd='fasd -sid'
searcha=search_aliases
setproxy=set_proxy
sf='fasd -sif'
sgem='sudo gem'
showBlocked='sudo ipfw list'
showF=hidden_files_show
showaliases=fzf_show_aliases2
showfiles='defaults write com.apple.finder AppleShowAllFiles -bool true && killall Finder'
showfuncs=fzf_show_customs_functions
sl=command_sl_selector
slink=set_setting_links
sp=spotlight
ssq='/Users/yanghao/data/data/.runtime//customs/bin/game lottery doubleball'
sst='sudo -EH '\''/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'\'
sstatu='svn status'
st=subl
stn=create_project
stp=find_project
stt='subl .'
subl=\''/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl'\'
sup='svn update'
tailw=tail_whereis_file
tgz='tar -zxvf'
tmuxen=tmux_iris_window
tmuxf=tmux_configs_select
tmuxls='ls /var/folders/ws/vjkm26xn19n6k1ckbl8fc3cw0000gn/T//tmux*/'
topForever='top -l 9999999 -s 10 -o cpu'
tping=tmux_list_panes
train=/opt/homebrew/opt/sl/bin/sl
trees=tree_search
tt=tmux_new_window
ttop='top -R -F -s 10 -o rsize'
tx=tmux_tmp_window
typep='type -p'
uct=update_command_theme
ugp=update_plugins
ugt=update_go_tools
unsetproxy=unset_proxy
uo=update_others
update=update_today
upgitfiles=update_git_files_and_modules
upisi=update_iterm2_shell_integration
ur=update_runtimes
urldecode='node -e "console.log(decodeURIComponent(process.argv[1]))"'
urlencode='node -e "console.log(encodeURIComponent(process.argv[1]))"'
uwt=update_wechat_tool
uzc=update_zsh_customs
vg=ag_open_with_line
vi=/opt/homebrew/bin/vim
vi2='vi -O2 '
vim='/opt/homebrew/opt/macvim/bin/mvim -v'
vimdiff=/opt/homebrew/opt/macvim/bin/vimdiff
vmc=fzf_vmc
vmi=fzf_vmi
vom=vim
vum=vim
which-command=whence
wikipedia=swikipedia
woshi=whoami
woshishei=whoami
wport=get_port_using_status
yahoo=syahoo
ym='yo help'
ymb='grunt build'
ymget='npm install -g yo grunt-cli bower'
ymi=yo
ymii='bower install'
yml='bower list'
ymlu='bower lookup'
yms='bower search'
ymsd='grunt server:dist'
ymst='grunt server:test'
ymsv='grunt server'
ymt='grunt test'
ymu='bower update'
ymui='bower uninstall'
ymv='yo --version'
z=_zlua
zb='z -b'
zbf='z -b -I'
zbi='z -b -i'
zc='z -c'
zd=zoxide
zf='z -I'
zh='z -I -t .'
zi=zinit
zini=zinit
zipf=compress_zip_file
zpl=zinit
zplg=zinit
zz='z -i'
zzc='zz -c'
