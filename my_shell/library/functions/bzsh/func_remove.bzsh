### Package Desc: 删除相关命令


function remove_DS_files() { # Desc: function: remove_DS_files:删除.DS_Store文件
    if [ "" = "$1" ]; then
        find . -type f -name '*.DS_Store' -ls -delete
    else
        find $1 -type f -name '*.DS_Store' -ls -delete
    fi
}
alias remove_DS="remove_DS_files" # Desc: alias: remove_DS:remove_DS_files命令的别名,删除.DS_Store文件

function remove_files_by_ext () { # Desc: function: remove_files_by_ext:删除后缀名为参数值的文件到回收站
    if [ "" = "$1" ]; then
        trash ./*
    else
        trash ./*$1
    fi
}
alias remove_ext="remove_files_by_ext" # Desc: alias: remove_ext:remove_files_by_exts命令的别名,删除后缀名为参数值的文件到回收站

function remove_ssh_tmp_file() { # Desc: function: remove_ssh_tmp_file:删除~/.ssh/tmp/*
    /bin/rm -f $HOME/.ssh/tmp/*
}
alias rmsshtmp="remove_ssh_tmp_file"        # Desc: alias: rmsshtmp:remove_ssh_tmp_file命令的别名,删除~/.ssh/tmp/*
alias removesshtmp="remove_ssh_tmp_file"    # Desc: alias: removesshtmp:remove_ssh_tmp_file命令的别名,删除~/.ssh/tmp/*

function remove_to_trash () { # Desc: function: remove_to_trash:删除到回收站
    local mpath
    for mpath in "$@"; do
        # ignore any arguments
        if [[ "$mpath" = -* ]]; then :
        else
            local dst=${mpath##*/}
            # append the time if necessary
            while [ -e ~/.Trash/"$dst" ]; do
                dst="$dst "$(date +%H-%M-%S)
            done
            /bin/mv "$mpath" ~/.Trash/"$dst"
        fi
    done
}
alias mtrash="remove_to_trash" # Desc: alias: mtrash:remove_to_trash命令的别名,删除到回收站

function trash () { # Desc: function: trash:Moves a file to the MacOS trash
    command /bin/mv "$@" ~/.Trash ;
}

function remove_whereis_file() { # Desc: function: remove_whereis_file:删除 which命令找到的文件
    command -v "$@" > /dev/null 2>&1
    [[ "$?" = "1" ]] && echo "Command $@ does not exists !" && return 1
    if [ "$(type $1 | grep 'a shell function from')" = "" ] && [ "$(type $1 | grep 'is an alias for')" = "" ]; then
        rm -f `which "$1"`
    else
        endfile=$(type "$@" | awk '{print $NF}')
        if [ -f $endfile ]; then
            rm -f $endfile
        else
            remove_whereis_file $endfile
        fi
    fi
}
alias removew="remove_whereis_file"     # Desc: alias: removew:remove_whereis_file命令的别名,删除 which命令找到的文件
alias rmww="remove_whereis_file"        # Desc: alias: rmww:remove_whereis_file命令的别名,删除 which命令找到的文件

function fzf_remove_file() { # Desc: function: fzf_remove_file:find找出文件选中删除
  hasgum=$(ifHasCommand gum)

  if [[ "$#" -eq 0 ]]; then
    local files
    files=$(find . -maxdepth 1 -type f | fzf --multi \
--reverse \
--margin=1 \
--padding=1 \
--preview-window bottom:6:border-rounded:hidden:wrap \
--preview " echo {} " \
--preview-label-pos top,4 \
--preview-label='[ 删除文件 ]' \
--prompt="查找 > " \
--bind 'ctrl-/:toggle-preview' \
--bind 'focus:transform-preview-label:echo -n "[ {} ]";' \
--bind 'ctrl-y:execute-silent(echo -n {}| pbcopy)+abort' \
--header "CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序")
    [[ ! "$files" ]] && return 1
    [[ $hasgum = 1 ]] && (gum confirm "确认删除?" && (echo $files | xargs -I '{}' rm {}) || echo "Action aborted !") || (echo $directories | xargs -I '{}' rm -rf {}) #we use xargs to capture filenames with spaces in them properly
  else
    [[ $hasgum = 1 ]]  && (gum confirm "确认删除?" && command rm "$@" || echo "Action aborted !") || command rm "$@"
  fi
}
alias frf="fzf_remove_file"     # Desc: alias:frf:fzf_remove_file的别名,find找出文件选中删除

function fzf_remove_directory() { # Desc: function: fzf_remove_directory:find找出文件夹选中删除
  hasgum=$(ifHasCommand gum)

  if [[ "$#" -eq 0 ]]; then
    local directories
    directories=$(find . -maxdepth 1 -type d | fzf --multi \
--reverse \
--margin=1 \
--padding=1 \
--preview-window bottom:6:border-rounded:hidden:wrap \
--preview " echo {} " \
--preview-label-pos top,4 \
--preview-label='[ 删除目录 ]' \
--prompt="查找 > " \
--bind 'ctrl-/:toggle-preview' \
--bind 'focus:transform-preview-label:echo -n "[ {} ]";' \
--bind 'ctrl-y:execute-silent(echo -n {}| pbcopy)+abort' \
--header "CTRL-Y 复制内容 | CTRL-/ 切换预览窗口")
    [[ ! "$directories" ]] && return 1
    [[ $hasgum = 1 ]]  && (gum confirm "确认删除?" && (echo $directories | xargs -I '{}' rm -rf {}) || echo "Action aborted !") || (echo $directories | xargs -I '{}' rm -rf {}) #we use xargs to capture filenames with spaces in them properly
  else
    [[ $hasgum = 1 ]]  && (gum confirm "确认删除?" && command rm -rf "$@" || echo "Action aborted !") || command rm -rf "$@"
  fi
}
alias frd="fzf_remove_directory"     # Desc: alias:frd:fzf_remove_directory的别名,find找出文件夹选中删除
