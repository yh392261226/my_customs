### Package Desc: ÂõæÁâáÁõ∏ÂÖ≥ÂëΩ‰ª§


function gifify_from_video() {                                                       # Desc: function: gifify_from_video:Animated gifs from any video from Alex Sexton gist.github.com/SlexAxton/4989674
    if [[ -n "$1" ]]; then
        if [[ $2 == '--good' ]]; then
        ffmpeg -i "$1" -r 10 -vcodec png out-static-%05d.png
        time convert -verbose +dither -layers Optimize -resize 900x900\> out-static*.png  GIF:- | gifsicle --colors 128 --delay=5 --loop --optimize=3 - -multifile - > "$1.gif"
        rm out-static*.png
        else
        ffmpeg -i "$1" -s 600x400 -pix_fmt rgb24 -r 10 -f gif - | gifsicle --optimize=3 --delay=3 > "$1.gif"
        fi
    else
        echo "proper usage: gifify <input_movie.mov>. You Do need to include extension."
    fi
}
alias giffv="gifify_from_video"                                                      # Desc: alias: giffv:gifify_from_videoÂëΩ‰ª§ÁöÑÂà´Âêç,Animated gifs from any video from Alex Sexton gist.github.com/SlexAxton/4989674

function image_url_cat() {                                                           # Desc: function: image_url_cat:Cat img from url in iterm2
    if [ "$(env | grep 'TERM_PROGRAM=' | sed 's/TERM_PROGRAM=//')" != "iTerm.app" ]; then
        echo "This command can only be used in iterm2 !!!";
        return 0;
    fi

    if [ $# -ne 1 ]; then
        echo "Type $0 image_url"
        return 1;
    fi
    imgurl="$1"
    axel -U 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_13_4) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/11.1 Safari/605.1.15' -q -o ${TMPDIR:-/tmp}/$(basename  $imgurl) $imgurl

    printf '\033]1337;File=inline=1;width=30%%;preserveAspectRatio=0'
    printf ":"
    base64 < "${TMPDIR:-/tmp}/$(basename $imgurl)"
    printf '\a\n'

    if [ -f ${TMPDIR:-/tmp}/$(basename $imgurl) ]; then
        rm -f ${TMPDIR:-/tmp}/$(basename $imgurl);
    fi
}
alias iuc="image_url_cat"                                                            # Desc: alias: iuc:image_url_catÂëΩ‰ª§ÁöÑÂà´Âêç,Cat img from url in iterm2

function images_rename_from_download() {                                             # Desc: function: images_rename_from_download:ÈáçÂëΩÂêç‰∏ãËΩΩÁöÑÂõæÁâá
    echo "Ë∞®ÊÖé‰ΩøÁî®Ôºå ‰ΩøÁî®ÂâçÂÖàÂ§á‰ªΩÔºåÂ§öÊ¨°‰ΩøÁî®Áõ∏ÂêåÂâçÁºÄ‰ºö‰Ωø‰Ω†ÁöÑÂõæÁâáÊñá‰ª∂‰∫íÁõ∏Ë¶ÜÁõñÂØºËá¥ÂáèÂ∞ëy|YÔºà‰ΩøÁî®Ôºân|N(‰∏ç‰ΩøÁî®)"
    read line;
    if [ "$line" = "y" ] || [ "$line" = "Y" ]; then
        echo "ËØ∑ËæìÂÖ•ÂâçÁºÄ"
        read prefix
    m=0
    for i in $(ls $MYRUNTIME/pictures/*.[jpg][png][JPG][JPEG][Jpg][PNG][Png][bmp][Bmp][BMP][gif][GIF][Gif]);
    do
        m=`expr $m + 1`
        #echo Êñá‰ª∂Âêç‰∏∫Ôºö${i%.*}
        mv $i $MYRUNTIME/pictures/$prefix-$m.${i##*.}
    done
    echo $m
    fi
}
alias irfd="images_rename_from_download"                                             # Desc: alias: irfd:images_rename_from_downloadÂëΩ‰ª§ÁöÑÂà´Âêç,ÈáçÂëΩÂêç‰∏ãËΩΩÁöÑÂõæÁâá

function image_resizes() {                                                           # Desc: function: image_resizes:ÂõæÁâáÂéãÁº©
    mkdir -p out &&
    for jpg in *.JPG; do
        echo $jpg
        [ -e out/$jpg ] || sips -Z 2048 --setProperty formatOptions 80 $jpg --out out/$jpg
    done
}
alias ir="image_resizes"                                                             # Desc: alias: ir:image_resizesÂëΩ‰ª§ÁöÑÂà´Âêç,ÂõæÁâáÂéãÁº©

function fzf_iterm2_background_image_selector() {                                    # Desc: function: fzf_iterm2_background_image_selector: Âà©Áî®fzfÈÄâÊã©iterm2ÁöÑËÉåÊôØÂõæÁâá
    IMGPATH=$MYRUNTIME/pictures
    [[ "" != "$1" ]] && IMGPATH=$1
    customcd $IMGPATH
    selected=$(ls . | fzf $FZF_CUSTOM_PARAMS --preview-window right:70%:rounded:hidden:wrap --preview ' chafa -f iterm -s ${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES} {} ' --header="$(_buildFzfHeader '' 'fzf_iterm2_background_image_selector')")
    bg_change ${IMGPATH}/${selected}
    customcd -
    #echo "bg_change ${IMGPATH}/${selected}" | pbcopy
    #echo "Ctrl - V to paste the command, then press enter to execute."
}
alias fbg="fzf_iterm2_background_image_selector"                                     # Desc: alias: fbg: fzf_iterm2_background_image_selectorÂëΩ‰ª§ÁöÑÂà´Âêç,Âà©Áî®fzfÈÄâÊã©iterm2ÁöÑËÉåÊôØÂõæÁâá


function get_iterm2_current_background_image() {                                     # Desc: function: get_iterm2_current_background_image: Ëé∑ÂèñÂΩìÂâçitermÁöÑsession‰∏≠ËÉåÊôØÂõæÂú∞ÂùÄ
    bg_path=$(osascript -e '
tell application "iTerm"
    if current window is missing value then
        return ""
    end if
    
    tell current window
        if current session is missing value then
            return ""
        end if
        
        tell current session
            if background image is not missing value then
                return background image
            else
                return ""
            end if
        end tell
    end tell
end tell')

    # Ê£ÄÊü•ÁªìÊûú
    if [[ -n "$bg_path" && "$bg_path" != "missing value" ]]; then
        echo "$bg_path"
    fi
    return
}
alias gicbg="get_iterm2_current_background_image"                                    # Desc: alias: gicbg: get_iterm2_current_background_imageÂëΩ‰ª§ÁöÑÂà´ÂêçÔºåËé∑ÂèñÂΩìÂâçitermÁöÑsession‰∏≠ËÉåÊôØÂõæÂú∞ÂùÄ

check_favo_exists() {
    MYRUNTIME=$(cat ${HOME}/.myruntime)
    RUNTIME_DIR="${MYRUNTIME}/tools"
    curmark=$(basename $(readlink $MYRUNTIME/pictures))
    FAVO_MARK="${RUNTIME_DIR}/m_favorate_${curmark}"

    if grep -qF "$(get_iterm2_current_background_image)" "${FAVO_MARK}"; then
        echo "1"
        return 1
    fi
    echo "0"
    return 0
}

function fzf_favo_manager() {                                                       # Desc: function: fzf_favo_manager: Âà©Áî®fzfÁÆ°ÁêÜËá™ÂÆö‰πâÁöÑfavoÂëΩ‰ª§
    custom_gum_show2hide_header "ËÉåÊôØÂõæÊî∂ËóèÁÆ°ÁêÜ" || echo -e "ËÉåÊôØÂõæÊî∂ËóèÁÆ°ÁêÜ"
    local action=$(printf "%s\n" \
        $(if [ "$TERM_PROGRAM" = "iTerm.app" ] && [ "" != "$(get_iterm2_current_background_image)" ] && [ "1" != "$(check_favo_exists)" ]; then echo "üóÇÔ∏èÊî∂ËóèËÉåÊôØÂõæÔºàcollectionÔºâ"; fi) \
        "üåê ÊâÄÊúâÊî∂Ëóè(All)" \
        "üîçÔ∏è Ê®°Á≥äÊêúÁ¥¢(Search)" \
        "üìÉ ÁîüÊàêHTMLÁõ∏ÂÜå(HTML)" \
        "üñºÔ∏è ËÆæÁΩÆÊåáÂÆöÂõæÁâá‰∏∫ËÉåÊôØ(Set)" \
        "üîÄ ÈöèÊú∫ÂàáÊç¢ËÉåÊôØ(Random)" \
        "üìç Âú®Finder‰∏≠ÂÆö‰ΩçÊñá‰ª∂(Locate)" \
        "üó∫Ô∏è ÊòæÁ§∫Áº©Áï•Âõæ(Thumb)" \
        "üõ†Ô∏è ÈáçÂª∫Êî∂ËóèÂàóË°®(Rebuild)" \
        "üóìÔ∏è Ë°®Ê†ºÂΩ¢ÂºèÂ±ïÁ§∫Êî∂Ëóè(Table)" \
        "üóëÔ∏è Âà†Èô§(Remove)" \
        "üí° Â∏ÆÂä©(Help)" \
        "üîô ËøîÂõû" | \
        fzf +m \
            --header " ËÉåÊôØÂõæÊî∂ËóèÁÆ°ÁêÜÁ≥ªÁªü " \
            --prompt "‰∏ªËèúÂçï ‚ùØ " \
            --preview-window=up:30% \
            --preview "echo 'ËØ∑ÈÄâÊã©Êìç‰ΩúÁ±ªÂûã'" \
            --height=15% \
            --bind='space:jump,jump:accept' \
            --reverse)

    case $action in
        *Êî∂ËóèËÉåÊôØÂõæ*) 
            $MYRUNTIME/customs/bin/favo add
            return 
            ;;
        *ÊâÄÊúâÊî∂Ëóè*) $MYRUNTIME/customs/bin/favo list
            return 
            ;;
        *Ê®°Á≥äÊêúÁ¥¢*) 
            local text
            if command -v gum >/dev/null; then
                text=$(gum input --placeholder "Type search text")
            else
                read text
            fi
            
            [[ "" != "$text" ]] && $MYRUNTIME/customs/bin/favo search "$text"
            return 
            ;;
        *ÁîüÊàêHTMLÁõ∏ÂÜå*) $MYRUNTIME/customs/bin/favo html
            return 
            ;;
        *ËÆæÁΩÆÊåáÂÆöÂõæÁâá‰∏∫ËÉåÊôØ*) 
            local img
            if command -v gum >/dev/null; then
                img=$(gum input --placeholder "Type image location")
            else
                read img
            fi
            $MYRUNTIME/customs/bin/favo set "$img"
            return 
            ;;
        *ÈöèÊú∫ÂàáÊç¢ËÉåÊôØ*) $MYRUNTIME/customs/bin/favo random
            return 
            ;;
        *Âú®Finder‰∏≠ÂÆö‰ΩçÊñá‰ª∂*) $MYRUNTIME/customs/bin/favo locate
            return 
            ;;
        *ÊòæÁ§∫Áº©Áï•Âõæ*) $MYRUNTIME/customs/bin/favo thumb
            return 
            ;;
        *ÈáçÂª∫Êî∂ËóèÂàóË°®*) $MYRUNTIME/customs/bin/favo rebuild
            return 
            ;;
        *Ë°®Ê†ºÂΩ¢ÂºèÂ±ïÁ§∫Êî∂Ëóè*) $MYRUNTIME/customs/bin/favo table
            return 
            ;;
        *Âà†Èô§*) $MYRUNTIME/customs/bin/favo remove
            return 
            ;;
        *Â∏ÆÂä©*) $MYRUNTIME/customs/bin/favo help
            return 
            ;;
        *ËøîÂõû*) return ;;
    esac
}
alias ffm2="fzf_favo_manager"                                                       # Desc: alias: ffm2: fzf_favo_managerÂëΩ‰ª§ÁöÑÂà´ÂêçÔºåÂà©Áî®fzfÁÆ°ÁêÜËá™ÂÆö‰πâÁöÑfavoÂëΩ‰ª§

function fzf_img_manager() {                                                        # Desc: function: fzf_img_manager: Âà©Áî®fzfÁÆ°ÁêÜËá™ÂÆö‰πâÁöÑimgÂëΩ‰ª§
    custom_gum_show2hide_header "ÂõæÁâá‰∏ãËΩΩÁÆ°ÁêÜ" || echo -e "ÂõæÁâá‰∏ãËΩΩÁÆ°ÁêÜ"
    local options=(
        "ÂÖ®ÁõÆÂΩïËÆ∞ÂΩï(record)"
        "ÂéªÈáçÂπ∂ËÆ∞ÂΩï(uniq)"
        "ÈáçÂ§çÊñá‰ª∂ÂàÜÁ¶ª(move)"
        "ÊâìÂºÄÁõÆÂΩï(open)"
        "Êú™Êª°Áä∂ÊÄÅÊü•Áúã(unfull)"
        "Â±ïÁ§∫ÈáçÂ§ç(after)"
        "ËÆ∞ÂΩïÂéªÈáçÂêéÈáçÂ§çÁöÑ(duprecord)"
        "ÂéªÈáçÂêéÂÜçÂéªÈáç(dupuniq)"
        "ÂéªÈáçÂêéÂ±ïÁ§∫ÈáçÂ§ç(dupafter)"
        "Êü•ÊâæÁ©∫Êñá‰ª∂(empty)"
        "ÁõëÊéß(watch)"
        "Â∏ÆÂä©(help)"
        "üîô ËøîÂõû"
    )
    while true; do        
        local selection=$(printf '%s\n' "${options[@]}" | fzf \
            --height=30% \
            --reverse \
            --prompt="‚û§ ÂõæÁâá > " 
        )
        
        case $selection in
            *record*) $MYRUNTIME/customs/bin/img record ;;
            *uniq*) $MYRUNTIME/customs/bin/img uniq ;;
            *move*) $MYRUNTIME/customs/bin/img move ;;
            *open*) $MYRUNTIME/customs/bin/img open ;;
            *unfull*) $MYRUNTIME/customs/bin/img unfull ;;
            *after*) $MYRUNTIME/customs/bin/img after ;;
            *duprecord*) $MYRUNTIME/customs/bin/img duprecord ;;
            *dupuniq*) $MYRUNTIME/customs/bin/img dupuniq ;;
            *dupafter*) $MYRUNTIME/customs/bin/img dupafter ;;
            *empty*) $MYRUNTIME/customs/bin/img empty ;;
            *watch*) 
                while true; do
                    echo "===== $(date) ====="    
                    $MYRUNTIME/customs/bin/img unfull
                    sleep 5
                done
            ;;
            *help*) $MYRUNTIME/customs/bin/img help ;;
            "üîô ËøîÂõû"|*)
                break
                ;;
        esac
    done
}
alias fim="fzf_img_manager"                                                         # Desc: alias: fim: fzf_img_managerÂëΩ‰ª§ÁöÑÂà´ÂêçÔºåÂà©Áî®fzfÁÆ°ÁêÜËá™ÂÆö‰πâÁöÑimgÂëΩ‰ª§

function fzf_image_manager() {                                                      # Desc: function: fzf_image_manager: Âà©Áî®fzfÁÆ°ÁêÜËá™ÂÆö‰πâÁöÑÂõæÁâáÂëΩ‰ª§
    local options=(
        "ÂõæÁâáÊî∂Ëóè(favo)"
        "‰∏ãËΩΩÂõæÁâá(img)"
        "üîô ËøîÂõû"
    )
    custom_gum_show2hide_header "ÂõæÁâáÁÆ°ÁêÜ" || echo -e "ÂõæÁâáÁÆ°ÁêÜ"
    while true; do
        
        local selection=$(printf '%s\n' "${options[@]}" | fzf \
            --height=30% \
            --reverse \
            --prompt="‚û§ ÂõæÁâá > " 
        )
        
        case $selection in
            *favo*)
                fzf_favo_manager
                ;;
            *img*)
                fzf_img_manager
                ;;
            "üîô ËøîÂõû"|*)
                break
                ;;
        esac
    done
}
alias fimg="fzf_image_manager"                                                      # Desc: alias: fimg: fzf_image_managerÂëΩ‰ª§ÁöÑÂà´ÂêçÔºåÂà©Áî®fzfÁÆ°ÁêÜËá™ÂÆö‰πâÁöÑÂõæÁâáÂëΩ‰ª§

function fzf_favorate_image_manager() {                                             # Desc: function: fzf_favorate_image_managerÂà©Áî®fzf ÈÖçÂêàËá™ÂÆö‰πâÁöÑ favo ÂëΩ‰ª§ÁÆ°ÁêÜ iterm2 ÁöÑËÉåÊôØÂõæ
    local action=$(printf "%s\n" \
        $(if [ "$TERM_PROGRAM" = "iTerm.app" ] && [ "" != "$(get_iterm2_current_background_image)" ] && [ "1" != "$(check_favo_exists)" ]; then echo "üóÇÔ∏èÊî∂ËóèËÉåÊôØÂõæÔºàcollectionÔºâ"; fi) \
        "üåê ÊâÄÊúâÊî∂Ëóè(All)" \
        "üîçÔ∏è Ê®°Á≥äÊêúÁ¥¢(Search)" \
        "üìÉ ÁîüÊàêHTMLÁõ∏ÂÜå(HTML)" \
        "üñºÔ∏è ËÆæÁΩÆÊåáÂÆöÂõæÁâá‰∏∫ËÉåÊôØ(Set)" \
        "üîÄ ÈöèÊú∫ÂàáÊç¢ËÉåÊôØ(Random)" \
        "üìç Âú®Finder‰∏≠ÂÆö‰ΩçÊñá‰ª∂(Locate)" \
        "üó∫Ô∏è ÊòæÁ§∫Áº©Áï•Âõæ(Thumb)" \
        "üõ†Ô∏è ÈáçÂª∫Êî∂ËóèÂàóË°®(Rebuild)" \
        "üóìÔ∏è Ë°®Ê†ºÂΩ¢ÂºèÂ±ïÁ§∫Êî∂Ëóè(Table)" \
        "üóëÔ∏è Âà†Èô§(Remove)" \
        "üí° Â∏ÆÂä©(Help)" \
        "üîö ÈÄÄÂá∫Á≥ªÁªü(Exit)" | \
        fzf +m \
            --header " ËÉåÊôØÂõæÊî∂ËóèÁÆ°ÁêÜÁ≥ªÁªü " \
            --prompt "‰∏ªËèúÂçï ‚ùØ " \
            --preview-window=up:30% \
            --preview "echo 'ËØ∑ÈÄâÊã©Êìç‰ΩúÁ±ªÂûã'" \
            --height=15% \
            --bind='space:jump,jump:accept' \
            --reverse)

    case $action in
        *Êî∂ËóèËÉåÊôØÂõæ*) 
            $MYRUNTIME/customs/bin/favo add
            return 
            ;;
        *ÊâÄÊúâÊî∂Ëóè*) $MYRUNTIME/customs/bin/favo list
            return 
            ;;
        *Ê®°Á≥äÊêúÁ¥¢*) 
            hascommand=$(ifHasCommand gum)
            local text
            if [ $hascommand = 1 ]; then
                text=$(gum input --placeholder "Type search text")
            else
                read text
            fi
            
            [[ "" != "$text" ]] && $MYRUNTIME/customs/bin/favo search "$text"
            return 
            ;;
        *ÁîüÊàêHTMLÁõ∏ÂÜå*) $MYRUNTIME/customs/bin/favo html
            return 
            ;;
        *ËÆæÁΩÆÊåáÂÆöÂõæÁâá‰∏∫ËÉåÊôØ*) 
            hascommand=$(ifHasCommand gum)
            local img
            if [ $hascommand = 1 ]; then
                img=$(gum input --placeholder "Type image location")
            else
                read img
            fi
            $MYRUNTIME/customs/bin/favo set "$img"
            return 
            ;;
        *ÈöèÊú∫ÂàáÊç¢ËÉåÊôØ*) $MYRUNTIME/customs/bin/favo random
            return 
            ;;
        *Âú®Finder‰∏≠ÂÆö‰ΩçÊñá‰ª∂*) $MYRUNTIME/customs/bin/favo locate
            return 
            ;;
        *ÊòæÁ§∫Áº©Áï•Âõæ*) $MYRUNTIME/customs/bin/favo thumb
            return 
            ;;
        *ÈáçÂª∫Êî∂ËóèÂàóË°®*) $MYRUNTIME/customs/bin/favo rebuild
            return 
            ;;
        *Ë°®Ê†ºÂΩ¢ÂºèÂ±ïÁ§∫Êî∂Ëóè*) $MYRUNTIME/customs/bin/favo table
            return 
            ;;
        *Âà†Èô§*) $MYRUNTIME/customs/bin/favo remove
            return 
            ;;
        *Â∏ÆÂä©*) $MYRUNTIME/customs/bin/favo help
            return 
            ;;
        *ÈÄÄÂá∫Á≥ªÁªü*) return ;;
    esac
}
alias ffi="fzf_favorate_image_manager"                                              # Desc: alias: ffi: fzf_favorate_image_managerÂëΩ‰ª§ÁöÑÂà´ÂêçÔºåÂà©Áî®fzf ÈÖçÂêàËá™ÂÆö‰πâÁöÑ favo ÂëΩ‰ª§ÁÆ°ÁêÜ iterm2 ÁöÑËÉåÊôØÂõæ

if [ "zsh" = "$nowshell" ]; then
    zle -N fzf_favorate_image_manager
    bindkey '^P' fzf_favorate_image_manager   #//Ctrl P ÊâßË°åfzf_favorate_image_managerÂáΩÊï∞
else
    export -f fzf_favorate_image_manager
    bind '"\C-P":"fzf_favorate_image_manager;\n"'   #//Ctrl P ÊâßË°åfzf_favorate_image_managerÂáΩÊï∞
fi