### Package Desc: 编辑器相关命令


function editor_which() {                                                           # Desc: function: editor_which:用which命令找出文件或命令的位置,并用默认编辑器进行编辑
    local COMMANDBIN=$1
    local FILENAME=$2
    if [ -f $COMMANDBIN ]; then
        if [ "" != "$FILENAME" ]; then
            command -v "$@" > /dev/null 2>&1
            [[ "$?" = "1" ]] && echo "Command $@ does not exists !" && return 1
            if [ "$(type $FILENAME | grep 'a shell function from')" = "" ] && [ "$(type $FILENAME | grep 'is an alias for')" = "" ]; then
                $COMMANDBIN `which "$FILENAME"`
            else
                endfile=$(type "$FILENAME" | awk '{print $NF}')
                if [ -f $endfile ] || [ -d $endfile ]; then
                    $COMMANDBIN $endfile
                else
                    editor_which $COMMANDBIN $endfile
                fi
            fi
        else
            $COMMANDBIN `pwd`
        fi
    else
        echo "$COMMANDBIN does not exsits !!!"
        return 1
    fi
}
alias ew="editor_which"                                                             # Desc: alias: ew: editor_which命令的别名,用which命令找出文件或命令的位置,并用默认编辑器进行编辑

function code_which() {                                                             # Desc: function: code_which:visual studio code 编辑which命令找到的文件地址
    local COMMANDBIN=/usr/local/bin/code
    editor_which $COMMANDBIN $1
}
alias cw="code_which"                                                               # Desc: alias: cw: code_which命令的别名,visualstudio code编辑which命令找到的文件地址
alias codew="code_which"                                                            # Desc: alias: codew: code_which命令的别名,visualstudio code编辑which命令找到的文件地址

function sublime_text_which() {                                                     # Desc: function: sublime_text_which:sublimetext编辑which命令找到的文件地址
    local COMMANDBIN=$HOME/bin/subl
    editor_which $COMMANDBIN $1
}
alias sw="sublime_text_which"                                                       # Desc: alias: sw:sublime_text_which命令的别名,sublimetext编辑which命令找到的文件地址
alias stw="sublime_text_which"                                                      # Desc: alias: stw:sublime_text_which命令的别名,sublimetext编辑which命令找到的文件地址

function vim_which() {                                                              # Desc: function: vim_which:vim编辑which命令找到的文件地址
    if [ -f /usr/local/bin/vim ]; then
        local COMMANDBIN=/usr/local/bin/vim
    elif [ -f /opt/homebrew/bin/vim ]; then
        local COMMANDBIN=/opt/homebrew/bin/vim
    fi
    editor_which $COMMANDBIN $1
}
alias vw="vim_which"                                                                # Desc: alias: vw: vim_which命令的别名,vim编辑which命令找到的文件地址
alias viw="vim_which"                                                               # Desc: alias: viw: vim_which命令的别名,vim编辑which命令找到的文件地址

function neovim_which() {                                                           # Desc: function: neovim_which:neovim编辑which命令找到的文件地址
    if [ -f /usr/local/bin/nvim ]; then
        local COMMANDBIN=/usr/local/bin/nvim
    elif [ -f /opt/homebrew/bin/nvim ]; then
        local COMMANDBIN=/opt/homebrew/bin/nvim
    fi
    editor_which $COMMANDBIN $1
}
alias nw="neovim_which"                                                             # Desc: alias: nw: neovim_which命令的别名,neovim编辑which命令找到的文件地址
alias nviw="neovim_which"                                                           # Desc: alias: nviw: neovim_which命令的别名,neovim编辑which命令找到的文件地址

function fzf_tags() {                                                               # Desc: function: fzf_tags:search ctags
    local linen
    [ -e tags ] &&
    linen=$(
    awk 'BEGIN { FS="\t" } !/^!/ {print toupper($4)"\t"$1"\t"$2"\t"$3}' tags |
    fzf $FZF_CUSTOM_PARAMS --nth=1,2 --with-nth=2 \
--preview-window right:50%:border-rounded:hidden:wrap \
--preview="bat {3} --color=always | tail -n +\$(echo {4} | tr -d \";\\\"\")" \
--preview-label='[ Ctags ]' \
--header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-A 全选/取消全选 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_tags 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈' \
    ) && ${EDITOR:-vim} $(cut -f3 <<< "$linen") -c "set nocst" \
                                        -c "silent tag $(cut -f2 <<< "$linen")"
}
alias ftags="fzf_tags"                                                              # Desc: alias: ftags: fzf_tags: search ctags

function fzf_open_viminfo() {                                                       # Desc: function: fzf_open_viminfo:open files in ~/.viminfo
    local files
    files=$(grep '^>' ~/.viminfo | cut -c3- |
    while read line; do
        [ -f "${line/\~/$HOME}" ] && echo "$line"
    done | fzf-tmux $FZF_CUSTOM_PARAMS --preview='$MYRUNTIME/customs/bin/_previewer {}' --preview-window right:70%:border-rounded:hidden:wrap --header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-A 全选/取消全选 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_open_viminfo 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈' -d -m -q "$*" -1) && vim ${files//\~/$HOME}
}
alias fov="fzf_open_viminfo"                                                        # Desc: alias: fov: fzf_open_viminfo命令的别名,open files in ~/.viminfo

function fzf_open_or_edit() {                                                       # Desc: function: fzf_open_or_edit:Modified version where you can press CTRL-O to open with `open` command, CTRL-E or Enter key to open with the $EDITOR
    local out file key
    out=$(fzf-tmux $FZF_CUSTOM_PARAMS --preview='$MYRUNTIME/customs/bin/_previewer {}' --preview-window right:70%:border-rounded:hidden:wrap --query="$1" --exit-0 --expect=ctrl-o,ctrl-e --header='CTRL-O打开 | CTRL-E编辑')
    key=$(head -1 <<< "$out")
    file=$(head -2 <<< "$out" | tail -1)
    if [ -n "$file" ]; then
        [ "$key" = ctrl-o ] && open "$file" || ${EDITOR:-vim} "$file"
    fi
}
alias fo="fzf_open_or_edit"                                                         # Desc: alias: fo:fzf_open_or_edit命令的别名,Modified version where you can press CTRL-O to open with `open` command, CTRL-E or Enter key to open with the $EDITOR
alias fe="fzf_open_or_edit"                                                         # Desc: alias: fe:fzf_open_or_edit命令的别名,Modified version where you can press CTRL-O to open with `open` command, CTRL-E or Enter key to open with the $EDITOR

function fzf_open_with_editor2() {                                                  # Desc: function: fzf_open_with_editor2:This finds files with fd, pipes the list into fzf and the fuzzy matched results get opened with Vim. It also uses bat for file previews.
    export FZF_DEFAULT_COMMAND="fd -p -i -H -L -t f -t l -t x \
-E 'icloud/*' \
-E 'Library/*' \
-E 'Pictures/Photos Library.photoslibrary/*' \
-E '.git'"
    IFS=$'\n' \
       files=($(fzf $FZF_CUSTOM_PARAMS \
--preview-window right:70%:border-rounded:hidden:wrap \
--preview 'bat --theme=timu-spacegrey --color=always {}' \
--preview-label='[ 文件 ]' \
--header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-A 全选/取消全选 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_open_with_editor2 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈' \
--query="$1" --multi --select-1 --exit-0 \
                    ))
    [[ -n "$files" ]] && vim "${files[@]}"
}
alias fv='fzf_open_with_editor2'                                                    # Desc: alias: fv:fzf_open_with_editor2命令的别名,This finds files with fd, pipes the list into fzf and the fuzzy matched results get opened with Vim. It also uses bat for file previews.

function fzf_nvim() {                                                               # Desc: function: fzf_nvim: 利用fzf选择文件并用nvim进行编辑
    files="$(fzf $FZF_CUSTOM_PARAMS \
--preview-window right:70%:border-rounded:hidden:wrap \
--preview 'bat --style=numbers --line-range=:500 {}' \
--preview-label='[ 文件 ]' \
--bind 'ctrl-o:execute(nvim {} < /dev/tty)' \
--header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-O 编辑 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_nvim 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈' \
)"
    count="$( echo "$files" | wc -l )"
    [[ ! "$files" ]] && return
    nvim $files
}
alias fnvi="fzf_nvim"                                                               # Desc: alias: fnvi: fzf_nvim命令的别名,利用fzf选择文件并用nvim进行编辑
alias fnvim="fzf_nvim"                                                              # Desc: alias: fnvim: fzf_nvim命令的别名,利用fzf选择文件并用nvim进行编辑


function fzf_vim() {                                                                # Desc: function: fzf_vim: 利用fzf选择文件并用vim进行编辑
    files="$(fzf $FZF_CUSTOM_PARAMS \
--preview-window right:70%:border-rounded:hidden:wrap \
--preview 'bat --style=numbers --line-range=:500 {}' \
--bind 'ctrl-o:execute(vim {} < /dev/tty)' \
--preview-label='[ 文件 ]' \
--header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-O 编辑 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_vim 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈' \
)"
    count="$( echo "$files" | wc -l )"
    vim $files
}
alias fvi="fzf_vim"                                                                 # Desc: alias: fvi: fzf_vim命令的别名,利用fzf选择文件并用vim进行编辑
alias fvim="fzf_vim"                                                                # Desc: alias: fvim: fzf_vim命令的别名,利用fzf选择文件并用vim进行编辑

function fzf_grep_search_vim_to_line() {                                            # Desc: function: fzf_grep_search_vim_to_line: 查询指定目录并vim定位打开根据关键字搜索到文件及行号
    INITIAL_QUERY="${*:-}"
    grep --recursive --line-number --binary-files=without-match $@ | fzf --delimiter ':' \
    --nth 3.. \
    $FZF_CUSTOM_PARAMS \
    --query "$INITIAL_QUERY" \
    --preview-label='[ 文件及行号 ]' \
    --preview-window 'right,70%,border-bottom,+{2}+3/3,~3' \
    --preview 'bat --color=always {1} --highlight-line {2}' \
    --bind 'focus:transform-preview-label:echo -n "[ {1} ]";' \
    --bind 'ctrl-y:execute-silent(echo -n {1}| pbcopy)+abort' \
    --bind 'ctrl-o:execute(vim +{2} {1} < /dev/tty)' \
    --bind 'enter:become(vim +{2} {1} < /dev/tty)' \
    --header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-O 编辑 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_grep_search_vim_to_line 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈'
}
alias fgv2l="fzf_grep_search_vim_to_line"                                           # Desc: alias: fsv2l: fzf_grep_search_vim_to_line命令的别名,vim定位打开根据关键字搜索到文件及行号

function fzf_rg_search_vim_to_line() {                                              # Desc: function: fzf_rg_search_vim_to_line: fzf展示ripgrep关键字的文件,选中后vim打开编辑,可以用ctrl+t切换查找方式
    \rm -f /tmp/rg-fzf-{r,f}
    local RGBIN
    [[ -f /opt/homebrew/bin/rg ]] && RGBIN=/opt/homebrew/bin/rg
    [[ -f /usr/local/bin/rg ]] && RGBIN=/usr/local/bin/rg
    RG_PREFIX="$RGBIN --column --line-number --no-heading --color=always --smart-case "
    INITIAL_QUERY="${*:-}"
    FZF_DEFAULT_COMMAND="$RG_PREFIX $(printf %q "$INITIAL_QUERY")" \
    fzf $FZF_CUSTOM_PARAMS \
    --ansi \
    --disabled \
    --query "$INITIAL_QUERY" \
    --color "hl:-1:underline,hl+:-1:underline:reverse" \
    --prompt 'ripgrep查询> ' \
    --header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-O 编辑 | CTRL-F 切换fzf筛选 | CTRL-R 切换ripgrep筛选 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_rg_search_vim_to_line 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈' \
    --delimiter : \
    --bind "start:reload:$RG_PREFIX {q};unbind(ctrl-r)" \
    --bind "change:reload:sleep 0.1; $RG_PREFIX {q} || true" \
    --bind 'ctrl-o:execute(vim +{2} {1} < /dev/tty)' \
    --bind 'focus:transform-preview-label:echo -n "[ {1} ]";' \
    --bind 'ctrl-y:execute-silent(echo -n {1}| pbcopy)+abort' \
    --bind  "ctrl-f:unbind(change,ctrl-f)+change-prompt(fzf查询> )+enable-search+rebind(ctrl-r)+transform-query(echo {q} > /tmp/rg-fzf-r; cat /tmp/rg-fzf-f)" \
    --bind  "ctrl-r:unbind(ctrl-r)+change-prompt(ripgrep查询> )+disable-search+reload($RG_PREFIX {q} || true)+rebind(change,ctrl-f)+transform-query(echo {q} > /tmp/rg-fzf-f; cat /tmp/rg-fzf-r)" \
    --preview 'bat --color=always {1} --highlight-line {2}' \
    --preview-window 'up,60%,border-bottom,+{2}+3/3,~3' \
    --bind 'enter:become(vim {1} +{2})'
}
alias frv2l="fzf_rg_search_vim_to_line"                                             # Desc: alias: frv2l: fzf_rg_search_vim_to_line命令的别名,fzf展示ripgrep关键字的文件,选中后vim打开编辑,可以用ctrl+t切换查找方式

function fzf_ag_search_to_line() {                                                  # Desc: function: fzf_ag_search_to_line:fuzzy grep open via ag with line number
    local AGBIN
    [[ -f /opt/homebrew/bin/ag ]] && AGBIN=/opt/homebrew/bin/ag
    [[ -f /usr/local/bin/ag ]] && AGBIN=/usr/local/bin/ag
    INITIAL_QUERY="${*:-}"
    keywords='.'
    [[ "" != "$INITIAL_QUERY" ]] && keywords="$INITIAL_QUERY"
    $AGBIN --color --line-number $keywords | fzf $FZF_CUSTOM_PARAMS \
    --query "$INITIAL_QUERY" \
    --delimiter=':' -n 2.. \
    --preview-window 'right,70%,border-bottom,+{2}+3/3,~3' \
    --preview 'bat --color=always {1} --highlight-line {2}' \
    --bind 'focus:transform-preview-label:echo -n "[ {1} ]";' \
    --bind 'ctrl-y:execute-silent(echo -n {1}| pbcopy)+abort' \
    --bind 'ctrl-o:execute(vim +{2} {1} < /dev/tty)' \
    --bind 'enter:become(vim +{2} {1} < /dev/tty)' \
    --header $'CTRL-Y 复制内容 | CTRL-/ 切换预览窗口 | CTRL-S 切换排序 \n| CTRL-N 下翻页 | CTRL-P 上翻页 | CTRL-O 编辑 \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ fzf_ag_search_to_line 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈'
}
alias fav2l="fzf_ag_search_to_line"                                                 # Desc: alias: fav2l:fzf_ag_search_to_line命令的别名,fuzzy grep open via ag with line number