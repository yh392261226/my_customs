#fzf 相关

export FZF_PREVIEW_FILE_CMD="bat --theme=gruvbox-dark --style=header,grid,numbers --color=always --pager=never"
export FZF_PREVIEW_DIR_CMD="eza --tree --level=3 --icons --group-directories-first"
export FZF_PREVIEW_IMG_CMD='chafa -f iterm -s ${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}'
export FZF_DEFAULT_COMMAND="fd --hidden --no-ignore-vcs --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export FZF_GIT_COMMAND="git ls-files --exclude-standard"
#export FZF_CURRENT_COMMAND_SWAP_FILE=${TMPDIR:-/tmp}/tmp_fzf_current_command.swap
export TMP_FZF_SEARCH_TYPES_FILE=${TMPDIR:-/tmp}/tmp_fzf_search_types.swap
export TMP_FZF_HEADER_SWAP_FILE=${TMPDIR:-/tmp}/tmp_fzf_header.swap
export TMP_FZF_SEARCH_SWAP_FILE=${TMPDIR:-/tmp}/tmp_fzf_search.swap
export TMP_FZF_BOOKMARKS_PATH=${HOME}/.fzf_bookmarks
[[ ! -d $TMP_FZF_BOOKMARKS_PATH ]] && mkdir -p $TMP_FZF_BOOKMARKS_PATH


_fzf_comprun() {
    local tmp_command=$1
    shift
    case "$tmp_command" in
        cd)           fzf "$@" --preview 'tree -C -L 3 {} | head -200' ;;
        export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
        ssh)          fzf "$@" --preview 'dig {}' ;;
        tree)         find . -type d | fzf --preview 'tree -C {}' "$@";;
        *)            fzf "$@" ;;
    esac
}

_buildFzfHeader() {
    rm -f $TMP_FZF_HEADER_SWAP_FILE
    newheader='╭──────────────────────────────────────────────────────────────────────────────────────── -- - ･\n'
    newheader=${newheader}"│   F1 Help Infomation "
    local new_header
    local post_header
    [[ "" != "$1" ]] && post_header="$1"
    # append ...
    if [[ ${post_header:0:3} =~ a+  ]]; then
        newheader="${newheader} ${post_header:3} "
    # replace with ...
    elif [[ ${post_header:0:3} =~ r-  ]]; then
        newheader="${post_header:3} "
    fi
    if [ "" != "$2" ]; then
        newheader="${newheader}
│  
│   ${2} 搜索内容
│   "
        echo ${2} > $TMP_FZF_HEADER_SWAP_FILE
    fi
    newheader=${newheader}'\n╰──────────────────────────────────────────────────────────────────────────────────────── -- - ･'
    echo "$newheader " | lolcat -f
}

_fzf_compgen_path() {
    fd --hidden --follow --exclude={.git,.idea,.vscode,.sass-cache} . "$1"
}

_fzf_compgen_dir() {
    fd --type d --hidden --follow --exclude={.git,.idea,.vscode,.sass-cache} . "$1"
}

export fzf_transformer_filter_all="fd --type f --type d -d 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_files="fd --type f -d 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_directories="fd --type d -d 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_hiddens="fd --type f --type d --hidden --glob '.*' "
export fzf_transformer_filter_images="fd -i -t f -e jpg -e jpeg -e png -e gif --max-depth 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_medias="fd -i -t f -e mp4 -e avi -e mkv --max-depth 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_documents="fd -i -t f -e txt -e md -e log -e pdf --max-depth 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_archives="fd -i -t f -e gz -e zip -e tar -e rar -e bz2 -e gzip -e 7z -e xz -e Z -e tgz -e ex --max-depth 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_languages="fd -e py -e js -e ts -e java -e cpp -e c -e h -e hpp -e rb -e php -e swift -e go -e rs -e sh -e bzsh -e fish -e pl -e lua -e scala -e kt -e dart -e cs -e m -e mm -e vue -e html -e htm -e css -e json -e yaml -e xml -e md -e txt -e yml -e toml -e ini -e cfg -e conf -e sql -e sql -e dockerfile -e docker-compose.yml --max-depth 5 --full-path $PWD --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build,.pyc,__pycache__,.DS_Store}"
export fzf_transformer_filter_contents="rg --color=always --line-number --no-heading '' "

export fzf_transformer='
    lines=$(( FZF_LINES - FZF_MATCH_COUNT - 1 ))
    if [[ $FZF_MATCH_COUNT -eq 0 ]]; then
        echo "change-preview-window:hidden"
    elif [[ $lines -gt 10 ]]; then
        echo "change-preview-window:$lines"
    elif [[ $lines -le 3 ]]; then
        echo "change-preview-window:40"
    elif [[ $FZF_PREVIEW_LINES -gt 0 ]]; then
        echo "change-preview-window:40"
    fi
'

export fzf_transformer_input_switcher='
    if [[ $FZF_INPUT_STATE = enabled ]]; then
        echo "rebind(j,k,/)+hide-input"
    elif [[ $FZF_KEY = enter ]]; then
        echo accept
    else
        echo abort
    fi
'

export fzf_transformer_footer_action='
    if [[ $FZF_CLICK_FOOTER_WORD =~ Help ]]; then
        echo "change-preview-label( ╢ Help Infomation ╟ )"
        echo "preview:(${MYRUNTIME}/customs/bin/_previewer \"help\")"
    elif [[ $FZF_CLICK_FOOTER_WORD =~ Copy ]]; then
        echo "execute-silent(echo -n \{} | pbcopy)+abort"
    elif [[ $FZF_CLICK_FOOTER_WORD =~ Open ]]; then
        echo "execute:open \{}"
    fi
'

export fzf_transformer_history_searcher='
    search_query=$(FZF_DEFAULT_OPTS="" && cat $HOME/.fzf_history | fzf --sync --history="$HOME/.fzf_history" +m --tac --no-sort --height=40% --layout=reverse --border-label="╢ HISTORY ╟" --header="▲ 选择历史查询 ▼" --prompt="历史记录 ❯ ")
    [[ -n "$search_query" ]] && echo "change-query:$search_query"
'

export fzf_transformer_search_swap_type='
    if [ -f $TMP_FZF_SEARCH_SWAP_FILE ]; then
        local action=$(cat $TMP_FZF_SEARCH_SWAP_FILE)
        case $action in
            "all")          
                echo 'files'        > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Search All ╟)+change-ghost(Type Search Words ...)+change-pointer( ➤)+reload($fzf_transformer_filter_all)" 
                ;;
            "files")        
                echo 'directories'  > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Files Only ╟)+change-ghost(Type Filter Files Words ...)+change-pointer( ⇝)+reload($fzf_transformer_filter_files)" 
                ;;
            "directories")  
                echo 'hiddens'      > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Directories Only ╟)+change-ghost(Type Filter Directories Words ...)+change-pointer( ⇛)+reload($fzf_transformer_filter_directories)" 
                ;;
            "hiddens")      
                echo 'images'       > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Hiddens Only ╟)+change-ghost(Type Filter Hidden Files and Directories Words ...)+change-pointer( ⇢)+reload($fzf_transformer_filter_hiddens)" 
                ;;
            "images")       
                echo 'medias'       > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Images Only ╟)+change-ghost(Type Filter Images Words ...)+change-pointer( ⇥)+reload($fzf_transformer_filter_images)" 
                ;;
            "medias")       
                echo 'documents'    > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Medias Only ╟)+change-ghost(Type Filter Medias Words ...)+change-pointer( ⇒)+reload($fzf_transformer_filter_medias)" 
                ;;
            "documents")    
                echo 'languages'    > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Documents Only ╟)+change-ghost(Type Filter Documents Words ...)+change-pointer( ⇪)+reload($fzf_transformer_filter_documents)" 
                ;;
            "languages")    
                echo 'contents'     > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Develop Languages Files ╟)+change-ghost(Type Filter Develop Languages Words ...)+change-pointer( ↮)+reload($fzf_transformer_filter_languages)" 
                ;;
            "contents")     
                echo 'archives'     > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Contents ╟)+change-ghost(Type Filter Contents Words ...)+change-pointer( ⇨)+reload($fzf_transformer_filter_contents)" 
                ;;
            "archives")     
                echo 'all'          > $TMP_FZF_SEARCH_SWAP_FILE 
                echo "change-list-label(╢ Filter Archives Only ╟)+change-ghost(Type Filter Archives Words ...)+change-pointer( →)+reload($fzf_transformer_filter_archives)" 
                ;;
        esac
  else
        echo "all" > $TMP_FZF_SEARCH_SWAP_FILE && echo "change-list-label(╢ Search All ╟)+change-ghost(Type Search Words ...)+change-pointer( ➤)+reload($fzf_transformer_filter_all)"
  fi
'

# ========================
# FZF 默认选项 (全面增强)
# ========================
FZF_DEFAULT_OPTS=''
# 基础行为
FZF_DEFAULT_OPTS+=' --no-tty-default '
FZF_DEFAULT_OPTS+=' --smart-case '
FZF_DEFAULT_OPTS+=' --exact '
FZF_DEFAULT_OPTS+=' --multi '
FZF_DEFAULT_OPTS+=' --cycle '
FZF_DEFAULT_OPTS+=' --scheme=path '
FZF_DEFAULT_OPTS+=' --inline-info '
FZF_DEFAULT_OPTS+=' --tmux=center,90% '
FZF_DEFAULT_OPTS+=' --track '
FZF_DEFAULT_OPTS+=' --highlight-line '
FZF_DEFAULT_OPTS+=' --ansi '
FZF_DEFAULT_OPTS+=' --header-first '
FZF_DEFAULT_OPTS+=' --no-input '
FZF_DEFAULT_OPTS+=' --list-border '
FZF_DEFAULT_OPTS+=' --header-border '
FZF_DEFAULT_OPTS+=' --input-border '
FZF_DEFAULT_OPTS+=' --gap '
FZF_DEFAULT_OPTS+=' --min-height=40 '

# 样式与布局
FZF_DEFAULT_OPTS+=' --style=full:double '
FZF_DEFAULT_OPTS+=' --border=rounded '
FZF_DEFAULT_OPTS+=' --layout=reverse '
FZF_DEFAULT_OPTS+=' --padding="1" '
FZF_DEFAULT_OPTS+=' --margin="5%" '
FZF_DEFAULT_OPTS+=' --marker=" ✓" '
FZF_DEFAULT_OPTS+=' --marker-multi-line="╻┃╹" '
FZF_DEFAULT_OPTS+=' --pointer=" ➤" '
FZF_DEFAULT_OPTS+=' --separator="┈┉" '
FZF_DEFAULT_OPTS+=' --scrollbar="▌▐" '
FZF_DEFAULT_OPTS+=' --prompt="Search  ❯ " '
FZF_DEFAULT_OPTS+=' --ghost="输入搜索内容...  " '
FZF_DEFAULT_OPTS+=' --info="inline-right: 💱 " '
FZF_DEFAULT_OPTS+=' --border-label-pos="bottom,4" '
FZF_DEFAULT_OPTS+=' --preview-label-pos="top,4" '
FZF_DEFAULT_OPTS+=' --header-lines-border=bottom '

# 历史与标签
FZF_DEFAULT_OPTS+=" --history=$HOME/.fzf_history "
FZF_DEFAULT_OPTS+=' --history-size=10000'

# 边框设置
FZF_DEFAULT_OPTS+=' --preview-window="right:70%:border-rounded,hidden,~3" '
FZF_DEFAULT_OPTS+=' --walker="file,dir,hidden,follow" '
FZF_DEFAULT_OPTS+=' --walker-skip=".git,.vscode,.idea,target,\$RECYCLE.BIN" '
FZF_DEFAULT_OPTS+=' --preview-label="╢ 预览内容 ╟" '
FZF_DEFAULT_OPTS+=' --list-label "╢ 搜索结果 ╟" '
FZF_DEFAULT_OPTS+=' --list-label-pos=top,4 '
FZF_DEFAULT_OPTS+=' --header-label "╢ 页头 ╟" '
FZF_DEFAULT_OPTS+=' --header-label-pos=top,4 '
FZF_DEFAULT_OPTS+=' --input-label "╢ 过滤 ╟" '
FZF_DEFAULT_OPTS+=' --input-label-pos=top,4 '
FZF_DEFAULT_OPTS+=' --border-label="╢ fzf $FZF_VERSION ╟" '
FZF_DEFAULT_OPTS+=' --header=" ⚕️ F1 Help Infomation ⚕️ " '
FZF_DEFAULT_OPTS+=' --footer=" [ Help ] / [ Copy ] / [ Open ] " '
FZF_DEFAULT_OPTS+=' --footer-label "╢ 页脚 ╟" '
FZF_DEFAULT_OPTS+=' --footer-label-pos=top,4 '
FZF_DEFAULT_OPTS+=" --gap-line=\"$(lolcat -f -F 1.4 <<< -----------------)\"  "
FZF_DEFAULT_OPTS+=' --info-command="echo -e \"\\x1b[32;1m$FZF_POS\\x1b[m/$FZF_INFO Current/Matches/Total (Selected) 👣  \"" '
FZF_DEFAULT_OPTS+=' --preview="(${MYRUNTIME}/customs/bin/_previewer {}) 2> /dev/null | head -500" '



# 动态绑定设置
FZF_DEFAULT_OPTS+=' --bind="focus:transform-preview-label:echo -n \"╢ Preview: {}  ╟\";" '
#FZF_DEFAULT_OPTS+=' --bind="focus:bg-transform-footer(file {})" '
FZF_DEFAULT_OPTS+=' --bind="ctrl-/:change-preview-window(left|left,40%|left,60%|left,80%|right,40%|right,60%|right,80%|up,20%,border-horizontal|up,40%,border-horizontal|up,60%,border-horizontal|up,80%,border-horizontal|up,90%,border-horizontal|down,20%,border-horizontal|down,40%,border-horizontal|down,60%,border-horizontal|down,80%,border-horizontal|down,90%,border-horizontal|hidden|right)" '
FZF_DEFAULT_OPTS+=' --bind="f1,ctrl-h:change-preview-label( ╢ Help Infomation ╟ )+preview:(${MYRUNTIME}/customs/bin/_previewer \"help\")" '
FZF_DEFAULT_OPTS+=" --bind 'f2,ctrl-f:transform:$fzf_transformer_search_swap_type'"
FZF_DEFAULT_OPTS+=' --bind="f3,ctrl-a:toggle-all" '
FZF_DEFAULT_OPTS+=' --bind="f4,ctrl-t:toggle-preview" '
FZF_DEFAULT_OPTS+=' --bind="f5:change-preview-window(down,99%)" '
FZF_DEFAULT_OPTS+=' --bind="f6:toggle-sort" '
FZF_DEFAULT_OPTS+=' --bind="f7,ctrl-o:become(${MYRUNTIME}/customs/bin/_operator {})" '
FZF_DEFAULT_OPTS+=' --bind="f8,ctrl-u:become(${MYRUNTIME}/customs/bin/_actioner {})" '
FZF_DEFAULT_OPTS+=' --bind="f9:page-up" '
FZF_DEFAULT_OPTS+=' --bind="f10:page-down" '
FZF_DEFAULT_OPTS+=' --bind="f11,ctrl-l:select-all+execute:less {+f}" '
FZF_DEFAULT_OPTS+=' --bind="f11,ctrl-l:+deselect-all" '
FZF_DEFAULT_OPTS+=' --bind="f12,ctrl-y:execute-silent(echo -n {} | pbcopy)+deselect-all+abort" '
FZF_DEFAULT_OPTS+=' --bind="j:down,k:up,/:show-input+unbind(j,k,/)" '
FZF_DEFAULT_OPTS+=" --bind='enter,esc,ctrl-c:transform:$fzf_transformer_input_switcher' "
FZF_DEFAULT_OPTS+=' --bind="space:change-header( 🔝 Type jump label )+jump,jump-cancel:change-header: Jump cancelled " '
FZF_DEFAULT_OPTS+=' --bind="∆:preview-down" '
FZF_DEFAULT_OPTS+=' --bind="˚:preview-up" '
FZF_DEFAULT_OPTS+=' --bind="¬:preview-half-page-down" '
FZF_DEFAULT_OPTS+=' --bind="˙:preview-half-page-up" '
FZF_DEFAULT_OPTS+=' --bind="…:preview-bottom" '
FZF_DEFAULT_OPTS+=' --bind="©:preview-top" '
FZF_DEFAULT_OPTS+=' --bind="≈:exclude-multi" '
FZF_DEFAULT_OPTS+=' --bind="†:toggle-track" '
FZF_DEFAULT_OPTS+=' --bind="÷:toggle-header" '
#FZF_DEFAULT_OPTS+=" --bind='®:reload($FZF_CURRENT_COMMAND_SWAP_FILE)' "
FZF_DEFAULT_OPTS+=' --bind="≥:next-selected" '
FZF_DEFAULT_OPTS+=' --bind="≤:prev-selected" '
FZF_DEFAULT_OPTS+=' --bind="shift-up:first" '
FZF_DEFAULT_OPTS+=' --bind="shift-down:last" '
FZF_DEFAULT_OPTS+=" --bind='ctrl-s:select-all+execute(cat {+f} > $HOME/Desktop/fzf_save.log)+abort' "
FZF_DEFAULT_OPTS+=" --bind='multi:transform-footer:(( FZF_SELECT_COUNT )) && echo \"选中 \$FZF_SELECT_COUNT 项\"' "

# 响应事件
FZF_DEFAULT_OPTS+=' --bind="load:change-prompt: 🔛 加载, 搜索 ➤ " '
FZF_DEFAULT_OPTS+=' --bind="result:transform:$fzf_transformer" '
FZF_DEFAULT_OPTS+=' --bind="resize:transform:$fzf_transformer" '
#FZF_DEFAULT_OPTS+=' --bind="focus:transform-footer:echo "文件类型：" && file --brief {};" '
FZF_DEFAULT_OPTS+=' --bind="change:first" '
FZF_DEFAULT_OPTS+=' --bind="zero:clear-query+change-input-label(无结果 ! 🔚 )+change-prompt:⏳️ 重新输入, 搜索 ➤ " '
FZF_DEFAULT_OPTS+=" --bind='ctrl-e:transform:$fzf_transformer_history_searcher' "
FZF_DEFAULT_OPTS+=' --bind="click-header:change-preview-label( ╢ Help Infomation ╟ )+preview:(${MYRUNTIME}/customs/bin/_previewer \"help\")" '
#FZF_DEFAULT_OPTS+=' --bind="click-footer:transform:$fzf_transformer_footer_action" '
FZF_DEFAULT_OPTS+=' --bind="click-footer:transform:(
    [[ $FZF_CLICK_FOOTER_WORD =~ Help ]] && echo \"change-preview-label( ╢ Help Infomation ╟ )+preview:(${MYRUNTIME}/customs/bin/_previewer \\\"help\\\")\"
    [[ $FZF_CLICK_FOOTER_WORD =~ Copy ]] && echo \"execute-silent(echo -n \{} | pbcopy)+abort\"
    [[ $FZF_CLICK_FOOTER_WORD =~ Open ]] && echo \"execute:open \{} \"
)" '

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS

#FZF_COMPLETION
FZF_COMPLETION_OPTS=" -1 "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" --cycle "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" --inline-info "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" --ansi  "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" --border='bottom' "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" --layout='reverse' "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" --preview='${MYRUNTIME}/customs/bin/_previewer {}' "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" --preview-window='right:70%:wrap' "
FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS" $FZF_PREVIEW_KEY_BIND"
export FZF_COMPLETION_OPTS=$FZF_COMPLETION_OPTS

if [ "zsh" = "$nowshell" ] && [[ -n "$ZSH_VERSION" ]]; then
    #FZF_TAB_OPTS
    zstyle ':completion:*:git-checkout:*' sort false
    zstyle ':completion:*:descriptions' format '[%d]'
    zstyle ':completion:*' list-colors ${(s.:.)LS_COLORS}
    zstyle ':completion:*' menu no
    zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --color=always $realpath'
    zstyle ':fzf-tab:*' fzf-pad 4
    zstyle ':fzf-tab:*' fzf-flags --color=fg:1,fg+:2 --bind=tab:accept
    zstyle ':fzf-tab:*' use-fzf-default-opts no
    zstyle ':fzf-tab:*' switch-group '<' '>'
    zstyle ':fzf-tab:*' fzf-command ftb-tmux-popup
    zstyle ':fzf-tab:complete:*:*' fzf-preview 'less ${(Q)realpath}'
    zstyle ':fzf-tab:complete:cd:*' fzf-preview 'eza -1 --icons $realpath'
    export LESSOPEN='|$HOME/.lessfilter %s'
    zstyle ':fzf-tab:complete:git-(add|diff|restore):*' fzf-preview \
        'git diff $word | delta'|
    zstyle ':fzf-tab:complete:git-log:*' fzf-preview \
        'git log --color=always $word'
    zstyle ':fzf-tab:complete:git-help:*' fzf-preview \
        'git help $word | bat -plman --color=always'
    zstyle ':fzf-tab:complete:git-show:*' fzf-preview \
        'case "$group" in
        "commit tag") git show --color=always $word ;;
        *) git show --color=always $word | delta ;;
        esac'
    zstyle ':fzf-tab:complete:git-checkout:*' fzf-preview \
        'case "$group" in
        "modified file") git diff $word | delta ;;
        "recent commit object name") git show --color=always $word | delta ;;
        *) git log --color=always $word ;;
        esac'
    zstyle ':fzf-tab:complete:(\\|)run-help:*' fzf-preview 'run-help $word'
    zstyle ':fzf-tab:complete:(\\|*/|)man:*' fzf-preview 'man $word'
fi

# FZF_CTRL_T_OPTS=" --preview='($MYRUNTIME/customs/bin/_previewer {}) 2> /dev/null | head -200' "
export FZF_CTRL_T_OPTS=$FZF_DEFAULT_OPTS

FZF_CTRL_R_OPTS=" --bind='enter:accept-or-print-query' "
FZF_CTRL_R_OPTS+=" --reverse "
FZF_CTRL_R_OPTS+=" --border-label='╢ 👣 History ╟' "
FZF_CTRL_R_OPTS+=" --header-label='╢ 👣 History ╟' "
FZF_CTRL_R_OPTS+=" --preview='echo {}' "
FZF_CTRL_R_OPTS+=" --preview-window='down:3:wrap:nohidden' "
export FZF_CTRL_R_OPTS=$FZF_CTRL_R_OPTS

export FZF_ALT_C_COMMAND='fd --type d . --color=never'
export FZF_ALT_C_OPTS="--reverse"

export FZF_TMUX_OPTS=" -p $FZF_DEFAULT_OPTS"

FZF_HELP_OPTS=" --multi "
FZF_HELP_OPTS+=" --layout='reverse' "
FZF_HELP_OPTS+=" --preview-window='right,75%,wrap' "
FZF_HELP_OPTS+=" --bind='ctrl-m:change-preview-window(down,75%,nowrap|right,75%,nowrap)' "
export FZF_HELP_OPTS=$FZF_HELP_OPTS
export FZF_HELP_SYNTAX='help'

export CLI_OPTIONS_CMD='ag -o --numbers -- $RE'

if [ "zsh" = "$nowshell" ]; then
    FZF_CUSTOM_PARAMS=(--multi \
    --border-label="╢Custom Command╟" \
    --preview='echo {}' \
    --bind='focus:transform-preview-label:echo -n "╢ Preview: {} ╟";' \
    --bind='f1:change-preview-label(Search Information)+transform-preview-label(echo Search Information)+preview:($MYRUNTIME/customs/bin/_previewer help)' \
    --tmux='center' \
    --header='$(_buildFzfHeader "" "")' \
    --header-first)
    export FZF_CUSTOM_PARAMS
    #--delimiter='' 文本切换的分隔符,比如:/time/+linux/+riscv64.ha:4:def中的:, 系统默认的是空格
    #ctrl-l 不是所有的都好用, 还没弄清楚为什么有的好使,有的不行
elif [ "bash" = "$nowshell" ]; then
    # 导出为环境变量
    FZF_CUSTOM_PARAMS='--multi '
    FZF_CUSTOM_PARAMS=" $FZF_CUSTOM_PARAMS --header-first "
    FZF_CUSTOM_PARAMS=" $FZF_CUSTOM_PARAMS --tmux=center "
    export FZF_CUSTOM_PARAMS
fi