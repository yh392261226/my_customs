#fzf 相关
export FZF_PREVIEW_FILE_CMD="bat"

export FZF_PREVIEW_DIR_CMD="tree -C"

export FZF_PREVIEW_IMG_CMD='chafa -f iterm -s ${FZF_PREVIEW_COLUMNS}x${FZF_PREVIEW_LINES}'

export FZF_DEFAULT_COMMAND="fd --exclude={.git,.idea,.vscode,.sass-cache,node_modules,build}"

export FZF_DEFAULT_OPTS="--height 60% --multi --cycle --inline-info --ansi --border --layout=reverse --preview '(${MYRUNTIME}/customs/bin/mypreview {}) 2> /dev/null | head -500'  --color 'fg:252,bg:233,hl:67,fg+:252,bg+:235,hl+:81,info:144,prompt:161,spinner:135,pointer:135,marker:118,border:254'"

export FZF_DEFAULT_OPTS=$FZF_DEFAULT_OPTS' --preview-window="right:70%:border-rounded" --padding="1" --margin="1" --prompt=" ➤ " --marker="✔" --pointer="↪︎" --separator="┈┉" --scrollbar="☰" --layout="reverse" --info="right" --walker=file,dir,hidden,follow --walker-skip=.git,node_modules,target'

export FZF_COMPLETION_OPTS="-1 --cycle --inline-info --ansi --height 60% --border=bottom --layout=reverse --preview '$PREVIEW {}' --preview-window 'right:70%:wrap'  $FZF_PREVIEW_KEY_BIND"

export FZF_TAB_OPTS=(-1 --cycle --inline-info --ansi --height 60% --border=bottom --layout=reverse  --expect=/ --priview '(${MYRUNTIME}/customs/bin/mypreview {}) 2> /dev/null | head -500'  --preview-window right:70%:border-rounded --color 'fg:#bbccdd,fg+:#ddeeff,bg:#334455,preview-bg:#223344,border:#778899')

export FZF_CTRL_T_OPTS="--preview '(${MYRUNTIME}/customs/bin/mypreview {}) 2> /dev/null | head -200'"

export FZF_CTRL_R_OPTS="--bind enter:accept-or-print-query --reverse"

export FZF_ALT_C_COMMAND='fd --type d . --color=never'

export FZF_ALT_C_OPTS="--reverse"

export FZF_TMUX_OPTS="-p"

FZF_HELP_OPTS="--multi --layout=reverse --preview-window=right,75%,wrap --height 60% "

FZF_HELP_OPTS+="--bind ctrl-m:change-preview-window(down,75%,nowrap|right,75%,nowrap)"

export FZF_HELP_SYNTAX='help'

export CLI_OPTIONS_CMD='ag -o --numbers -- $RE'

_fzf_comprun() {
  local command=$1
  shift

  case "$command" in
    cd)           fzf "$@" --preview 'tree -C {} | head -200' ;;
    export|unset) fzf "$@" --preview "eval 'echo \$'{}" ;;
    ssh)          fzf "$@" --preview 'dig {}' ;;
    tree)         find . -type d | fzf --preview 'tree -C {}' "$@";;
    *)            fzf "$@" ;;
  esac
}

export TMP_FZF_HEADER_SWAP_FILE=/tmp/tmp_fzf_header_swap

_buildFzfHeader() {

    rm -f $TMP_FZF_HEADER_SWAP_FILE
    newheader=" CTRL-H 帮助信息 "
    local new_header
    local post_header

    [[ "" != "$1" ]] && post_header="$1"
    # append ...
    if [[ ${post_header:0:3} =~ a+  ]]; then
        newheader="${newheader} ${post_header:3} "
    # replace with ...
    elif [[ ${post_header:0:3} =~ r-  ]]; then
        newheader="${post_header:3} "
    fi

    if [ "" != "$2" ]; then
        newheader="${newheader} \n ⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊⇊ \n ⇉ ${2} 搜索内容 \n ⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈⇈ "
        echo ${2} > $TMP_FZF_HEADER_SWAP_FILE
    fi
    echo "$newheader "
}

# Use fd (https://github.com/sharkdp/fd) instead of the default find
# command for listing path candidates.
# - The first argument to the function ($1) is the base path to start traversal
# - See the source code (completion.{bash,zsh}) for the details.
_fzf_compgen_path() {
  fd --hidden --follow --exclude ".git" . "$1"
}

# Use fd to generate the list for directory completion
_fzf_compgen_dir() {
  fd --type d --hidden --follow --exclude ".git" . "$1"
}

fzf_transformer='
  # 1 line for info, another for prompt, and 2 more lines for preview window border
  lines=$(( FZF_LINES - FZF_MATCH_COUNT - 4 ))
  if [[ $FZF_MATCH_COUNT -eq 0 ]]; then
    echo "change-preview-window:hidden"
  elif [[ $lines -gt 3 ]]; then
    echo "change-preview-window:$lines"
  elif [[ $FZF_PREVIEW_LINES -ne 3 ]]; then
    echo "change-preview-window:3"
  fi
'

export FZF_CUSTOM_PARAMS=(--reverse \
--multi \
--margin=10% \
--padding=2 \
--height=60% \
--toggle-sort='ctrl-s' \
--preview-window='right,60%,rounded,+{2}+3/3,~3' \
--scrollbar='▌▐' \
--border='rounded' \
--border-label=' 自定义命令 ' \
--border-label-pos=bottom,4 \
--preview=' echo {} ' \
--preview-label-pos=bottom,4 \
--preview-label=' 查找 ' \
--prompt='查找  ➤ ' \
--bind='ctrl-t:toggle-preview' \
--bind='focus:transform-preview-label:echo -n "╢  {}  ╟";' \
--bind='ctrl-y:execute-silent(echo -n {}| pbcopy)+abort' \
--bind='ctrl-n:page-down,ctrl-p:page-up' \
--bind='ctrl-a:toggle-all' \
--bind='ctrl-j:preview-down' \
--bind='ctrl-k:preview-up' \
--bind='ctrl-l:select-all+execute:less {+f}' --bind='ctrl-l:+deselect-all' \
--bind="result:transform:$transformer" \
--bind="resize:transform:$transformer" \
--bind='≥:next-selected,≤:prev-selected' \
--bind="ctrl-h:change-preview-label( 帮助信息 )+transform-preview-label(echo ' 帮助信息 ')+preview:(_previewer 'help')" \
--bind='load:change-prompt:加载完成,查找  ➤ ' \
--header="$(_buildFzfHeader '' '')" \
--header-first \
)
#--delimiter='' 文本切换的分隔符,比如:/time/+linux/+riscv64.ha:4:def中的:, 系统默认的是空格
#ctrl-l 不是所有的都好用, 还没弄清楚为什么有的好使,有的不行