#!/usr/bin/env bash
###Desc:服务命令管理器
###Author:杨浩
#source $MYRUNTIME/customs/bin/mymessage
options=("start" "restart" "stop" "status" "run" "list" "cleanup" "-h" "--help")
myoption=$2
myservice=$1
ismysql="true"
if [ "$myservice" != "mysql" ] && [ "$myservice" != "mysqladmin" ] && [[ $myservice != mysql* ]]; then
	ismysql=""
	services=$(brew services list | awk '{print $1}'| grep -v 'Name')
fi

custom_title() {
  local title=$1
  if [ "" = "$title" ]; then
    title=""
  fi
  echo "-------------------------------------------------"
  echo "----$title"
  return 0
}

if [ $# -lt 1 ]; then
  echo ""
  custom_title "Installed services:"
  for service in ${services[*]}; do
    echo -n "[ $service ] "
  done

  echo ""

  echo ""
  custom_title "Suppose options:"
  for option_i in ${options[*]}; do
    echo -n "[ $option_i ] "
  done

  echo ""

  echo ""
  custom_title "Help:"
  echo "bservice [service_name] [list | run | start | stop | restart | cleanup]
    Easily start and stop formulae via launchctl.

    Integrates Homebrew formulae with macOS' launchctl manager. Services can be
    added to either /Library/LaunchDaemons or ~/Library/LaunchAgents.
    Basically, items in /Library/LaunchDaemons are started at boot, while those
    in ~/Library/LaunchAgents are started at login.

    When started with sudo, it operates on /Library/LaunchDaemons; otherwise,
    it operates on ~/Library/LaunchAgents.

    On start the plist file is generated and written to a Tempfile, and then
    copied to the launch path (existing plists are overwritten).

    [sudo] bservice list
    List all running services for the current user (or root)

    [sudo] bservice formula|--all run
    Run the service formula without starting at login (or boot).

    [sudo] bservice formula|--all start
    Start the service formula immediately and register it to launch at login (or boot).

    [sudo] bservice formula|--all stop
    Stop the service formula immediately and unregister it from launching at login (or boot).

    [sudo] bservice formula|--all restart
    Stop (if necessary) and start the service immediately and register it to launch at login (or boot)."
  exit 1
else
  #******************************************************************#
  # mysql 启动与重启独立处理
  #******************************************************************#
  if [ "$ismysql" = "true" ]; then
    echo "如果mysql出现问题，需要更改plist文件，进入mysql的base目录 修改目录下的plist文件即可"
    if [ "$myoption" = "start" ] || [ "$myoption" = "restart" ]; then
    [[ -L /usr/local/etc/my.cnf ]] && rm -f /usr/local/etc/my.cnf
    [[ -L /private/etc/my.cnf ]] && sudo rm -f /private/etc/my.cnf
	  case "$myservice" in
	  	"mysql") #默认8.0
		  ln -sf $HOME/Dropbox/working/coding/conf/mysql/8.0/my.cnf /usr/local/etc/my.cnf
      sudo ln -sf $HOME/Dropbox/working/coding/conf/mysql/8.0/my.cnf /private/etc/my.cnf
		;;
		"mysql@5.5")
		  ln -sf $HOME/Dropbox/working/coding/conf/mysql/5.5/my.cnf /usr/local/etc/my.cnf
      sudo ln -sf $HOME/Dropbox/working/coding/conf/mysql/5.5/my.cnf /private/etc/my.cnf
		;;
		"mysql@5.6")
		  ln -sf $HOME/Dropbox/working/coding/conf/mysql/5.6/my.cnf /usr/local/etc/my.cnf
      sudo ln -sf $HOME/Dropbox/working/coding/conf/mysql/5.6/my.cnf /private/etc/my.cnf
		;;
		"mysql@5.7")
		  ln -sf $HOME/Dropbox/working/coding/conf/mysql/5.7/my.cnf /usr/local/etc/my.cnf
      sudo ln -sf $HOME/Dropbox/working/coding/conf/mysql/5.7/my.cnf /private/etc/my.cnf
		;;
	  esac
    fi
  fi
 #******************************************************************#
 # mysql 启动与重启独立处理 end
 #******************************************************************#


  case "$myoption" in
    "status")
      echo "brew services list| grep \"Name\|$myservice\""
      echo "-------------------------------------------------"
      custom_title "Result:"
      echo ""
      brew services list| grep "Name\|$myservice"
      ;;
    "fullprocesslist")
      if [ "$ismysql" = "true" ]; then
        [[ -f $MYRUNTIME/tools/m_mysql ]] && source $MYRUNTIME/tools/m_mysql || echo "ERROR: m_mysql does not exists!";
        custom_title  "mysql -u$user -p$pass -h$host -P$port -e 'show full processlist'"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        for ((i=1; i<=10; i ++)); do
          echo $i;
          mysql -u$user -p"$pass" -h$host -P$port -e 'show full processlist'
          # sleep 1
        done
      else
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        echo "Not suppose yet!"
      fi
      ;;
    "processlist")
      if [ "$ismysql" = "true" ]; then
        [[ -f $MYRUNTIME/tools/m_mysql ]] && source $MYRUNTIME/tools/m_mysql || echo "ERROR: m_mysql does not exists!";
        custom_title  "/usr/local/bin/mysqladmin -u$user -p"$pass" -h$host -P$port processlist -i 1"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        /usr/local/bin/mysqladmin -u$user -p$pass -h$host -P$port processlist -i 1
      else
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        echo "Not suppose yet!"
      fi
      ;;
    "login")
      if [ "$myservice" = "mysqladmin" ]; then
        [[ -f $MYRUNTIME/tools/m_mysqladmin ]] && source $MYRUNTIME/tools/m_mysqladmin || echo "ERROR: m_mysqladmin does not exists!";
        custom_title  "mysql -u$user -p$pass -h$host -P$port"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        mysql -u$user -p$pass -h$host -P$port
      elif [ "$ismysql" = "true" ]; then
        [[ -f $MYRUNTIME/tools/m_mysql ]] && source $MYRUNTIME/tools/m_mysql || echo "ERROR: m_mysql does not exists!";
        custom_title  "mycli -u$user -p$pass -h$host -P$port"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        /usr/local/bin/mycli -u$user -p$pass -h$host -P$port --myclirc=$myclirc
      elif [ "$myservice" = "redis" ]; then
        [[ -f $MYRUNTIME/tools/m_redis ]] && source $MYRUNTIME/tools/m_redis || echo "ERROR: m_redis does not exists!";
        custom_title  "/usr/local/bin/redis-cli -h $host -p $port"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        /usr/local/bin/redis-cli -h $host -p $port
      elif [ "$myservice" = "mongo" ]; then
        custom_title  "/usr/local/bin/mongo"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        /usr/local/bin/mongo
      elif [ "$myservice" = "memcached" ]; then
        [[ -f $MYRUNTIME/tools/m_memcached ]] && source $MYRUNTIME/tools/m_memcached || echo "ERROR: m_memcached does not exists!";
        custom_title  "/usr/local/bin/telnet $host $port"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        /usr/local/bin/telnet $host $port
      fi
      ;;
    *)
      if [ "$myservice" = "list" ]; then
        custom_title "Command: brew services list"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        brew services list
      else
        custom_title "Command: brew services $myoption $myservice"
        echo "-------------------------------------------------"
        custom_title "Result:"
        echo ""
        brew services $myoption $myservice
      fi
    ;;
  esac
  echo "-------------------------------------------------"
  echo "-------------------------------------------------"
  echo "-------------------------------------------------"
fi
