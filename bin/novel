#!/usr/bin/env bash
### Desc:下载小说及管理小说
### Date:2025-08-19


[[ -f $MYRUNTIME/customs/my_shell/library/core/bzsh/core_common.bzsh ]] && source $MYRUNTIME/customs/my_shell/library/core/bzsh/core_common.bzsh

NOVELSPATH=$(cat $HOME/.novelspath)
NOVELSDATAPATH=${NOVELSPATH}/datas
OPENBROWSER='Brave Browser'

[[ "" = "$NOVELSPATH" ]] && echo "Novels path does not set ..." && exit 1
[[ ! -d "$NOVELSPATH" ]] && mkdir -p $NOVELSPATH

function novels_read() {
    custom_gum_show2hide_header "小说阅读列表"
    local choose=$(ls $NOVELSDATAPATH/ | awk -v dir="$current_dir" '
                { print }
                END { print "↩️ 返回" }
            ' | fzf +m $FZF_CUSTOM_PARAMS --preview="$MYRUNTIME/customs/bin/_previewer $NOVELSDATAPATH/{}")
    if [[ "$choose" == "↩️ 返回" ]]; then
        return
    elif [ "" != "$choose" ]; then
        local options=(
            "终端阅读"
            "浏览器阅读"
            "↩️ 返回"
        )
        local choose_reader=$(printf '%s\n' "${options[@]}" | fzf \
            --ansi \
            --height=40% \
            --reverse \
            --prompt="➤ 主菜单 > " \
            --header="请选择阅读器" \
            --color="header:" \
            --preview="echo -e '\n按 Enter 选择阅读器'"
        )
        case "$choose_reader" in
            *终端阅读*)
                # 如果是其他命令或脚本引入的就使用greader来阅读
                if [ ! -z $1 ] && [ "$1" = "source" ]; then
                    $MYRUNTIME/customs/bin/ureader --mode tui $NOVELSDATAPATH/$choose
                else # 否则使用全功能的reader来阅读
                    $MYRUNTIME/customs/bin/ureader $NOVELSDATAPATH/$choose
                fi
                ;;
            *浏览器阅读*)
                open -a "$OPENBROWSER" "$NOVELSDATAPATH/$choose"
                ;;
            *)
                return
                ;;
        esac
    fi
}

function __clean_url() {
    local url="$1"
    [ -z "$url" ] && echo "" && return
    
    # 去除开头的协议和冒号
    url=${url#http://}
    url=${url#https://}
    url=${url#http:}
    url=${url#https:}
    url=${url#:}
    
    # 去除结尾的斜杠（递归移除直到没有结尾斜杠）
    while [ -n "$url" ] && [ "${url%"${url#?}"}" = '/' ]; do
        url=${url%/}
    done
    
    echo "$url"
}

function novels_web_manager() {
    custom_gum_show2hide_header "小说网站管理"
    local novelsmark=$MYRUNTIME/tools/m_novels_mark
    [[ ! -f $novelsmark ]] && touch $novelsmark

    builtin cd $NOVELSPATH

    local url=$(cat "$novelsmark" | awk -v dir="$current_dir" '
                { print }
                END { print "↩️ 返回" }
            ' | fzf \
    +m \
    --delimiter='#' \
    --with-nth=1 \
    --header="🌐 选择网址 (单选) [${header%%#*}]" \
    --preview='echo "{1}\n{2}"' \
    --preview-window="right:70%:wrap" \
	--height=95% \
    --bind="ctrl-y:execute-silent(printf '%s' {2} | pbcopy)+abort" \
    --bind="ctrl-e:execute(nvim \"$novelsmark\" < /dev/tty > /dev/tty)+reload(cat \"$novelsmark\")" \
    --bind="ctrl-o:execute(open -a \"$OPENBROWSER\" {2})+abort" \
    --bind="ctrl-h:change-preview-label( ╢ Help Infomation ╟ )+preview($MYRUNTIME/customs/bin/web help)+show-preview" \
    --header-first \
    --footer="Ctrl-Y 复制 | Ctrl-E 编辑 | Ctrl-O 浏览器打开网址 | Ctrl-h 帮助" \
    --prompt="➤ " | \
    awk -F'#' '{print $2}')
    
    [[ -z "$url" ]] && return
    local cleanname=$(__clean_url $url)
    local options=(
        "编辑小说Ids"
        "打开网址"
        "执行下载"
        "编辑下载脚本"
        "↩️ 返回"
    )
    while true; do
        selected=${1-$(printf '%s\n' "${options[@]}" | fzf \
            --ansi \
            --height=40% \
            --reverse \
            --prompt="➤ 主菜单 > " \
            --header="请选择功能模块" \
            --color="header:" \
            --preview="echo -e '\n按 Enter 选择功能模块'"
        )}
        case "$selected" in
            *编辑小说Ids*)
                custom_gum_show2hide_header "编辑小说Ids"
                # 用code或nvim
                nvim ${cleanname}/${cleanname}ids.log
                ;;
            *打开网址*)
                custom_gum_show2hide_header "打开网址"
                open -a "$OPENBROWSER" $url
                ;;
            *执行下载*)
                custom_gum_show2hide_header "执行下载"
                cd ${cleanname} && bash ${cleanname}.multype.sh
                ;;
            *编辑下载脚本*)
                custom_gum_show2hide_header "编辑下载脚本"
                code ${cleanname}/
                ;;
            *)
                return
                ;;
        esac
    done
    builtin cd -
}

function novels_help() {
    custom_gum_show2hide_header "帮助"
    echo "╭──────────────────────────────────────────────────────────────────────────────────────── -- - ･
│ 使用方法: ${0##*/} [command(可用命令)]
╰──────────────────────────────────────────────────────────────────────────────────────── -- - ･" | lolcat -f -F 0.05
    echo "╭──────────────────────────────────────────────────────────────────────────────────────── -- - ･
│ 使用方法: ${0##*/} [command]
│ command(可用命令):
│  statistics      / s   统计数量及磁盘占用量
│  choose          / c   小说阅读列表
│  directory       / d   打开小说文件夹
│  web             / w   小说网站管理
│  help            / h   帮助
╰──────────────────────────────────────────────────────────────────────────────────────── -- - ･" | lolcat -f -F 0.05
}

options=(
    "统计数量及磁盘占用量"
    "打开小说文件夹"
    "小说阅读列表"
    "小说网站管理"
    "帮助"
    "↩️ 返回"
)

selected=${1-$(printf '%s\n' "${options[@]}" | fzf \
        --ansi \
        --height=40% \
        --reverse \
        --prompt="➤ 主菜单 > " \
        --header="请选择功能模块" \
        --color="header:" \
        --preview="echo -e '\n按 Enter 选择功能模块'"
    )}
if [ ! -z "$2" ] && [ "$2" = "source" ]; then
	[[ -z "$selected" ]] && break
	[[ $selected =~ 返回 ]] && break
fi
case "$selected" in
    "statistics" | "s" | *统计数量及磁盘占用量*)
        custom_gum_show2hide_header "统计数量及磁盘占用量"
        echo "Novels Num:"
        ls $NOVELSPATH/ | wc -l
        echo "Novels Size:"
        /usr/bin/du -sh $NOVELSPATH | awk '{print $1}'
        ;;
    "directory" | "d" | *打开小说文件夹*)
        custom_gum_show2hide_header "打开小说文件夹"
        open $NOVELSPATH
        ;;
    "choose" | "c" | *小说阅读列表*)
        novels_read "$2"
        ;;
    "web" | "w" | *小说网站管理*)
        novels_web_manager
        ;;
    "help" | "h" | *帮助*)
        novels_help
        ;;
    *返回* | *)
        if [ ! -z "$2" ] && [ "$2" = "source" ]; then
            break
            return
        fi
        ;;
esac
